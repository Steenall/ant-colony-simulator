<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1878.6px" preserveAspectRatio="none" style="width:1216px;height:1878px;background:#FFFFFF;" version="1.1" viewBox="0 0 1216 1878" width="1216.8px" zoomAndPan="magnify"><defs/><g><!--MD5=[5d4cd377749310b66bf14896f5cd8d9b]
cluster model--><g id="cluster_model"><path d="M5.1,482.4082 L31.5,482.4082 A2.25,2.25 0 0 1 33,483.9082 L37.2,497.1809 L782.7,497.1809 A1.5,1.5 0 0 1 784.2,498.6809 L784.2,1872.9082 A1.5,1.5 0 0 1 782.7,1874.4082 L5.1,1874.4082 A1.5,1.5 0 0 1 3.6,1872.9082 L3.6,483.9082 A1.5,1.5 0 0 1 5.1,482.4082 " fill="none" style="stroke:#000000;stroke-width:0.8999999999999999;"/><line style="stroke:#000000;stroke-width:0.8999999999999999;" x1="3.6" x2="37.2" y1="497.1809" y2="497.1809"/><text fill="#000000" font-family="sans-serif" font-size="8.4" font-weight="bold" lengthAdjust="spacing" textLength="25.8" x="6" y="492.6727">model</text></g><!--MD5=[225161e14d702eadd052068ce6c2a7f1]
cluster export--><g id="cluster_export"><path d="M879.9,488.1082 L908.1,488.1082 A2.25,2.25 0 0 1 909.6,489.6082 L913.8,502.8809 L1088.1,502.8809 A1.5,1.5 0 0 1 1089.6,504.3809 L1089.6,692.4082 A1.5,1.5 0 0 1 1088.1,693.9082 L879.9,693.9082 A1.5,1.5 0 0 1 878.4,692.4082 L878.4,489.6082 A1.5,1.5 0 0 1 879.9,488.1082 " fill="none" style="stroke:#000000;stroke-width:0.8999999999999999;"/><line style="stroke:#000000;stroke-width:0.8999999999999999;" x1="878.4" x2="913.8" y1="502.8809" y2="502.8809"/><text fill="#000000" font-family="sans-serif" font-size="8.4" font-weight="bold" lengthAdjust="spacing" textLength="27.6" x="880.8" y="498.3727">export</text></g><!--MD5=[86cbce8df1eb9d604fbbb2fa357940f8]
cluster view--><g id="cluster_view"><path d="M395.7,3.6082 L416.1,3.6082 A2.25,2.25 0 0 1 417.6,5.1082 L421.8,18.3809 L1211.1,18.3809 A1.5,1.5 0 0 1 1212.6,19.8809 L1212.6,450.3082 A1.5,1.5 0 0 1 1211.1,451.8082 L395.7,451.8082 A1.5,1.5 0 0 1 394.2,450.3082 L394.2,5.1082 A1.5,1.5 0 0 1 395.7,3.6082 " fill="none" style="stroke:#000000;stroke-width:0.8999999999999999;"/><line style="stroke:#000000;stroke-width:0.8999999999999999;" x1="394.2" x2="421.8" y1="18.3809" y2="18.3809"/><text fill="#000000" font-family="sans-serif" font-size="8.4" font-weight="bold" lengthAdjust="spacing" textLength="19.8" x="396.6" y="13.8727">view</text></g><!--MD5=[4d061423ac46323d5e63c696f701ac37]
cluster sfml--><g id="cluster_sfml"><path d="M410.1,30.6082 L428.1,30.6082 A2.25,2.25 0 0 1 429.6,32.1082 L433.8,45.3809 L1196.7,45.3809 A1.5,1.5 0 0 1 1198.2,46.8809 L1198.2,435.9082 A1.5,1.5 0 0 1 1196.7,437.4082 L410.1,437.4082 A1.5,1.5 0 0 1 408.6,435.9082 L408.6,32.1082 A1.5,1.5 0 0 1 410.1,30.6082 " fill="none" style="stroke:#000000;stroke-width:0.8999999999999999;"/><line style="stroke:#000000;stroke-width:0.8999999999999999;" x1="408.6" x2="433.8" y1="45.3809" y2="45.3809"/><text fill="#000000" font-family="sans-serif" font-size="8.4" font-weight="bold" lengthAdjust="spacing" textLength="17.4" x="411" y="40.8727">sfml</text></g><!--MD5=[8c7d7abc12e214c3cc12c9ab70edee11]
class Coordinate--><g id="elem_Coordinate"><rect codeLine="14" fill="#F1F1F1" height="84.6633" id="Coordinate" rx="1.5" ry="1.5" style="stroke:#181818;stroke-width:0.3;" width="191.4" x="267.9" y="1591.8082"/><ellipse cx="340.05" cy="1601.4082" fill="#ADD1B2" rx="6.6" ry="6.6" style="stroke:#181818;stroke-width:0.6;"/><path d="M341.7094,1598.9332 Q341.8031,1598.802 341.9156,1598.7363 Q342.0281,1598.6707 342.1594,1598.6707 Q342.3844,1598.6707 342.525,1598.8301 Q342.6656,1598.9801 342.6656,1599.3457 L342.6656,1600.2176 Q342.6656,1600.5832 342.525,1600.7426 Q342.3844,1600.902 342.1594,1600.902 Q341.9531,1600.902 341.8313,1600.7801 Q341.7094,1600.6676 341.6438,1600.3582 Q341.6156,1600.1426 341.5031,1600.0301 Q341.3063,1599.8051 340.9406,1599.6738 Q340.575,1599.5426 340.2,1599.5426 Q339.7406,1599.5426 339.3563,1599.7395 Q338.9813,1599.9363 338.6813,1600.3863 Q338.3906,1600.8363 338.3906,1601.4551 L338.3906,1602.1113 Q338.3906,1602.852 338.925,1603.3488 Q339.4594,1603.8363 340.4156,1603.8363 Q340.9781,1603.8363 341.3719,1603.6863 Q341.6063,1603.5926 341.8594,1603.3301 Q342.0188,1603.1707 342.1031,1603.1238 Q342.1969,1603.077 342.3187,1603.077 Q342.5156,1603.077 342.6656,1603.2363 Q342.825,1603.3863 342.825,1603.5926 Q342.825,1603.7988 342.6188,1604.0426 Q342.3187,1604.3895 341.8406,1604.5863 Q341.1937,1604.8582 340.4156,1604.8582 Q339.5062,1604.8582 338.7844,1604.4832 Q338.1937,1604.1832 337.7813,1603.5457 Q337.3688,1602.8988 337.3688,1602.1301 L337.3688,1601.4363 Q337.3688,1600.6395 337.7344,1599.9551 Q338.1094,1599.2613 338.7656,1598.8957 Q339.4219,1598.5207 340.1625,1598.5207 Q340.6031,1598.5207 340.9875,1598.6238 Q341.3812,1598.7176 341.7094,1598.9332 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="42" x="352.35" y="1604.8863">Coordinate</text><line style="stroke:#181818;stroke-width:0.3;" x1="268.5" x2="458.7" y1="1611.0082" y2="1611.0082"/><ellipse cx="274.5" cy="1619.8945" fill="none" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="43.2" x="279.9" y="1622.4727">x: unsigned</text><ellipse cx="274.5" cy="1631.0672" fill="none" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="43.8" x="279.9" y="1633.6453">y: unsigned</text><line style="stroke:#181818;stroke-width:0.3;" x1="268.5" x2="458.7" y1="1638.1535" y2="1638.1535"/><ellipse cx="274.5" cy="1647.0398" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="139.8" x="279.9" y="1649.618">Coordinate(x: unsigned, y: unsigned)</text><ellipse cx="274.5" cy="1658.2125" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="48" x="279.9" y="1660.7906">Coordinate()</text><ellipse cx="274.5" cy="1669.3852" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="175.8" x="279.9" y="1671.9633">operator == (const Coordinate&amp; c) const : bool</text></g><!--MD5=[f8e7078f77c005d15b486c0c98deb1e6]
class Action--><g id="elem_Action"><rect codeLine="22" fill="#F1F1F1" height="151.6992" id="Action" rx="1.5" ry="1.5" style="stroke:#181818;stroke-width:0.3;" width="160.8" x="85.8" y="1558.2082"/><ellipse cx="151.95" cy="1567.8082" fill="#EB937F" rx="6.6" ry="6.6" style="stroke:#181818;stroke-width:0.6;"/><path d="M151.2656,1568.2863 L151.2656,1569.7863 L153.8625,1569.7863 L153.8625,1569.2332 Q153.8625,1568.8676 154.0031,1568.7082 Q154.1531,1568.5488 154.3781,1568.5488 Q154.6031,1568.5488 154.7438,1568.7082 Q154.8844,1568.8676 154.8844,1569.2332 L154.8844,1570.8082 L150.0844,1570.8082 Q149.7094,1570.8082 149.55,1570.6676 Q149.4,1570.527 149.4,1570.2926 Q149.4,1570.0676 149.5594,1569.927 Q149.7188,1569.7863 150.0844,1569.7863 L150.2438,1569.7863 L150.2438,1565.7926 L150.0844,1565.7926 Q149.7094,1565.7926 149.55,1565.652 Q149.4,1565.5113 149.4,1565.277 Q149.4,1565.052 149.55,1564.9113 Q149.7094,1564.7707 150.0844,1564.7707 L154.6594,1564.7707 L154.6594,1566.327 Q154.6594,1566.6926 154.5187,1566.852 Q154.3875,1567.002 154.1531,1567.002 Q153.9281,1567.002 153.7875,1566.852 Q153.6469,1566.6926 153.6469,1566.327 L153.6469,1565.7926 L151.2656,1565.7926 L151.2656,1567.2645 L152.1563,1567.2645 Q152.1563,1566.8707 152.2313,1566.7582 Q152.3906,1566.5145 152.6719,1566.5145 Q152.8969,1566.5145 153.0375,1566.6738 Q153.1781,1566.8238 153.1781,1567.1895 L153.1781,1568.3707 Q153.1781,1568.6988 153.1031,1568.8113 Q152.9438,1569.0457 152.6719,1569.0457 Q152.3906,1569.0457 152.2313,1568.802 Q152.1563,1568.6895 152.1563,1568.2863 L151.2656,1568.2863 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="23.4" x="164.25" y="1571.2863">Action</text><line style="stroke:#181818;stroke-width:0.3;" x1="86.4" x2="246" y1="1577.4082" y2="1577.4082"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="39" x="89.4" y="1588.8727">NOTHING,</text><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="153.6" x="89.4" y="1600.0453">GO_BACK_TO_COLONY_WITH_FOOD,</text><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="64.2" x="89.4" y="1611.218">COMING_HOME,</text><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="88.2" x="89.4" y="1622.3906">SEARCH_FOR_FOOD,</text><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="75.6" x="89.4" y="1633.5633">SEARCH_COLONY,</text><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="40.8" x="89.4" y="1644.7359">EXPLORE,</text><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="54.6" x="89.4" y="1655.9086">PATROLLING,</text><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="25.8" x="89.4" y="1667.0813">BORN,</text><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="71.4" x="89.4" y="1678.2539">CARRING_LARVA,</text><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="35.4" x="89.4" y="1689.4266">ATTACK,</text><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="13.2" x="89.4" y="1700.5992">DIE</text><line style="stroke:#181818;stroke-width:0.3;" x1="86.4" x2="246" y1="1705.1074" y2="1705.1074"/></g><!--MD5=[02f7077ed79257124e28b791f351f1d7]
class Direction--><g id="elem_Direction"><rect codeLine="36" fill="#F1F1F1" height="129.3539" id="Direction" rx="1.5" ry="1.5" style="stroke:#181818;stroke-width:0.3;" width="75.6" x="67.2" y="1342.2082"/><ellipse cx="86.46" cy="1351.8082" fill="#EB937F" rx="6.6" ry="6.6" style="stroke:#181818;stroke-width:0.6;"/><path d="M85.7756,1352.2863 L85.7756,1353.7863 L88.3725,1353.7863 L88.3725,1353.2332 Q88.3725,1352.8676 88.5131,1352.7082 Q88.6631,1352.5488 88.8881,1352.5488 Q89.1131,1352.5488 89.2538,1352.7082 Q89.3944,1352.8676 89.3944,1353.2332 L89.3944,1354.8082 L84.5944,1354.8082 Q84.2194,1354.8082 84.06,1354.6676 Q83.91,1354.527 83.91,1354.2926 Q83.91,1354.0676 84.0694,1353.927 Q84.2287,1353.7863 84.5944,1353.7863 L84.7538,1353.7863 L84.7538,1349.7926 L84.5944,1349.7926 Q84.2194,1349.7926 84.06,1349.652 Q83.91,1349.5113 83.91,1349.277 Q83.91,1349.052 84.06,1348.9113 Q84.2194,1348.7707 84.5944,1348.7707 L89.1694,1348.7707 L89.1694,1350.327 Q89.1694,1350.6926 89.0287,1350.852 Q88.8975,1351.002 88.6631,1351.002 Q88.4381,1351.002 88.2975,1350.852 Q88.1569,1350.6926 88.1569,1350.327 L88.1569,1349.7926 L85.7756,1349.7926 L85.7756,1351.2645 L86.6662,1351.2645 Q86.6662,1350.8707 86.7413,1350.7582 Q86.9006,1350.5145 87.1819,1350.5145 Q87.4069,1350.5145 87.5475,1350.6738 Q87.6881,1350.8238 87.6881,1351.1895 L87.6881,1352.3707 Q87.6881,1352.6988 87.6131,1352.8113 Q87.4538,1353.0457 87.1819,1353.0457 Q86.9006,1353.0457 86.7413,1352.802 Q86.6662,1352.6895 86.6662,1352.2863 L85.7756,1352.2863 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="33.6" x="97.14" y="1355.2863">Direction</text><line style="stroke:#181818;stroke-width:0.3;" x1="67.8" x2="142.2" y1="1361.4082" y2="1361.4082"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="25.2" x="70.8" y="1372.8727">NONE,</text><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="49.8" x="70.8" y="1384.0453">TOP_RIGHT,</text><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="19.8" x="70.8" y="1395.218">TOP,</text><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="45.6" x="70.8" y="1406.3906">TOP_LEFT,</text><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="23.4" x="70.8" y="1417.5633">LEFT,</text><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="64.2" x="70.8" y="1428.7359">BOTTOM_LEFT,</text><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="38.4" x="70.8" y="1439.9086">BOTTOM,</text><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="68.4" x="70.8" y="1451.0813">BOTTOM_RIGHT,</text><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="25.2" x="70.8" y="1462.2539">RIGHT</text><line style="stroke:#181818;stroke-width:0.3;" x1="67.8" x2="142.2" y1="1466.7621" y2="1466.7621"/></g><!--MD5=[10c50c2e3150e634e5ce95ceba89a534]
class Ant--><g id="elem_Ant"><rect codeLine="48" fill="#F1F1F1" height="207.5625" id="Ant" rx="1.5" ry="1.5" style="stroke:#181818;stroke-width:0.3;" width="208.8" x="198.6" y="1303.2082"/><ellipse cx="294.15" cy="1312.8082" fill="#A9DCDF" rx="6.6" ry="6.6" style="stroke:#181818;stroke-width:0.6;"/><path d="M295.4625,1313.8676 L292.9781,1313.8676 L292.725,1314.4863 L292.9781,1314.4863 Q293.3438,1314.4863 293.5031,1314.627 Q293.6625,1314.7676 293.6625,1315.002 Q293.6625,1315.227 293.5031,1315.3676 Q293.3438,1315.5082 292.9781,1315.5082 L291.6,1315.5082 Q291.2344,1315.5082 291.0844,1315.3676 Q290.925,1315.227 290.925,1314.9926 Q290.925,1314.7676 291.0938,1314.627 Q291.2531,1314.477 291.6281,1314.4863 L293.2313,1310.4926 L292.5656,1310.4926 Q292.2,1310.4926 292.0406,1310.352 Q291.8812,1310.2113 291.8812,1309.977 Q291.8812,1309.752 292.0406,1309.6113 Q292.2,1309.4707 292.5656,1309.4707 L294.7688,1309.4707 L296.8031,1314.4863 Q297.1594,1314.4863 297.2719,1314.5707 Q297.5062,1314.7301 297.5062,1315.002 Q297.5062,1315.227 297.3469,1315.3676 Q297.1969,1315.5082 296.8313,1315.5082 L295.4531,1315.5082 Q295.0875,1315.5082 294.9281,1315.3676 Q294.7688,1315.227 294.7688,1314.9926 Q294.7688,1314.7676 294.9281,1314.627 Q295.0875,1314.4863 295.4531,1314.4863 L295.7063,1314.4863 L295.4625,1313.8676 Z M295.0313,1312.8457 L294.2156,1310.8207 L293.3906,1312.8457 L295.0313,1312.8457 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="8.4" font-style="italic" lengthAdjust="spacing" textLength="12.6" x="306.45" y="1316.2863">Ant</text><line style="stroke:#181818;stroke-width:0.3;" x1="199.2" x2="406.8" y1="1322.4082" y2="1322.4082"/><polygon fill="none" points="205.2,1328.2945,207.6,1330.6945,205.2,1333.0945,202.8,1330.6945" style="stroke:#B38D22;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="118.2" x="210.6" y="1333.8727">pathing : std::vector&lt;Direction&gt;</text><polygon fill="none" points="205.2,1339.4672,207.6,1341.8672,205.2,1344.2672,202.8,1341.8672" style="stroke:#B38D22;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="66" x="210.6" y="1345.0453">countChunks : int</text><polygon fill="none" points="205.2,1350.6398,207.6,1353.0398,205.2,1355.4398,202.8,1353.0398" style="stroke:#B38D22;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="89.4" x="210.6" y="1356.218">coordinate : Coordinate</text><polygon fill="none" points="205.2,1361.8125,207.6,1364.2125,205.2,1366.6125,202.8,1364.2125" style="stroke:#B38D22;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="112.2" x="210.6" y="1367.3906">homeCoordinate : Coordinate</text><polygon fill="none" points="205.2,1372.9852,207.6,1375.3852,205.2,1377.7852,202.8,1375.3852" style="stroke:#B38D22;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" text-decoration="underline" textLength="90" x="210.6" y="1378.5633">idCount : unsigned long</text><polygon fill="none" points="205.2,1384.1578,207.6,1386.5578,205.2,1388.9578,202.8,1386.5578" style="stroke:#B38D22;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="67.2" x="210.6" y="1389.7359">id : unsigned long</text><line style="stroke:#181818;stroke-width:0.3;" x1="199.2" x2="406.8" y1="1394.2441" y2="1394.2441"/><ellipse cx="205.2" cy="1403.1305" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="18.6" x="210.6" y="1405.7086">Ant()</text><ellipse cx="205.2" cy="1414.3031" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" font-style="italic" lengthAdjust="spacing" textLength="127.8" x="210.6" y="1416.8813">virtual update(map : Map) : Action</text><ellipse cx="205.2" cy="1425.4758" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="109.2" x="210.6" y="1428.0539">getCoordinate() : Coordinate</text><ellipse cx="205.2" cy="1436.6484" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="171.6" x="210.6" y="1439.2266">setCoordinate(coordinate : Coordinate) : void</text><ellipse cx="205.2" cy="1447.8211" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="130.8" x="210.6" y="1450.3992">moveBackward(map : Map *) : void</text><ellipse cx="205.2" cy="1458.9937" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="182.4" x="210.6" y="1461.5719">moveTo(map : Map *, direction : Direction) : void</text><ellipse cx="205.2" cy="1470.1664" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="193.2" x="210.6" y="1472.7445">setHomeCoordinate(coordinate : Coordinate) : void</text><ellipse cx="205.2" cy="1481.3391" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="162" x="210.6" y="1483.9172">operator==(other : const Ant&amp;) const : bool</text><ellipse cx="205.2" cy="1492.5117" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="64.8" x="210.6" y="1495.0898">isAtHome() : bool</text><ellipse cx="205.2" cy="1503.6844" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="25.8" x="210.6" y="1506.2625">~Ant();</text></g><!--MD5=[f45ddfd80cd2fcab9be8a5ff6a1b3336]
class ColonyAnt--><g id="elem_ColonyAnt"><rect codeLine="72" fill="#F1F1F1" height="62.318" id="ColonyAnt" rx="1.5" ry="1.5" style="stroke:#181818;stroke-width:0.3;" width="123.6" x="480.6" y="1602.9082"/><ellipse cx="520.35" cy="1612.5082" fill="#A9DCDF" rx="6.6" ry="6.6" style="stroke:#181818;stroke-width:0.6;"/><path d="M521.6625,1613.5676 L519.1781,1613.5676 L518.925,1614.1863 L519.1781,1614.1863 Q519.5437,1614.1863 519.7031,1614.327 Q519.8625,1614.4676 519.8625,1614.702 Q519.8625,1614.927 519.7031,1615.0676 Q519.5437,1615.2082 519.1781,1615.2082 L517.8,1615.2082 Q517.4344,1615.2082 517.2844,1615.0676 Q517.125,1614.927 517.125,1614.6926 Q517.125,1614.4676 517.2937,1614.327 Q517.4531,1614.177 517.8281,1614.1863 L519.4313,1610.1926 L518.7656,1610.1926 Q518.4,1610.1926 518.2406,1610.052 Q518.0813,1609.9113 518.0813,1609.677 Q518.0813,1609.452 518.2406,1609.3113 Q518.4,1609.1707 518.7656,1609.1707 L520.9688,1609.1707 L523.0031,1614.1863 Q523.3594,1614.1863 523.4719,1614.2707 Q523.7063,1614.4301 523.7063,1614.702 Q523.7063,1614.927 523.5469,1615.0676 Q523.3969,1615.2082 523.0313,1615.2082 L521.6531,1615.2082 Q521.2875,1615.2082 521.1281,1615.0676 Q520.9688,1614.927 520.9688,1614.6926 Q520.9688,1614.4676 521.1281,1614.327 Q521.2875,1614.1863 521.6531,1614.1863 L521.9063,1614.1863 L521.6625,1613.5676 Z M521.2312,1612.5457 L520.4156,1610.5207 L519.5906,1612.5457 L521.2312,1612.5457 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="8.4" font-style="italic" lengthAdjust="spacing" textLength="39" x="532.65" y="1615.9863">ColonyAnt</text><line style="stroke:#181818;stroke-width:0.3;" x1="481.2" x2="603.6" y1="1622.1082" y2="1622.1082"/><line style="stroke:#181818;stroke-width:0.3;" x1="481.2" x2="603.6" y1="1626.9082" y2="1626.9082"/><ellipse cx="487.2" cy="1635.7945" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="47.4" x="492.6" y="1638.3727">ColonyAnt();</text><ellipse cx="487.2" cy="1646.9672" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" font-style="italic" lengthAdjust="spacing" textLength="108" x="492.6" y="1649.5453">update(map : Map) :  Action;</text><ellipse cx="487.2" cy="1658.1398" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="52.2" x="492.6" y="1660.718">~ColonyAnt();</text></g><!--MD5=[b5524c1f1cf4f7aeecdc9b5af5b05d87]
class Queen--><g id="elem_Queen"><rect codeLine="78" fill="#F1F1F1" height="140.5266" id="Queen" rx="1.5" ry="1.5" style="stroke:#181818;stroke-width:0.3;" width="211.2" x="448.2" y="1336.8082"/><ellipse cx="538.35" cy="1346.4082" fill="#ADD1B2" rx="6.6" ry="6.6" style="stroke:#181818;stroke-width:0.6;"/><path d="M540.0094,1343.9332 Q540.1031,1343.802 540.2156,1343.7363 Q540.3281,1343.6707 540.4594,1343.6707 Q540.6844,1343.6707 540.825,1343.8301 Q540.9656,1343.9801 540.9656,1344.3457 L540.9656,1345.2176 Q540.9656,1345.5832 540.825,1345.7426 Q540.6844,1345.902 540.4594,1345.902 Q540.2531,1345.902 540.1313,1345.7801 Q540.0094,1345.6676 539.9438,1345.3582 Q539.9156,1345.1426 539.8031,1345.0301 Q539.6062,1344.8051 539.2406,1344.6738 Q538.875,1344.5426 538.5,1344.5426 Q538.0406,1344.5426 537.6563,1344.7395 Q537.2813,1344.9363 536.9812,1345.3863 Q536.6906,1345.8363 536.6906,1346.4551 L536.6906,1347.1113 Q536.6906,1347.852 537.225,1348.3488 Q537.7594,1348.8363 538.7156,1348.8363 Q539.2781,1348.8363 539.6719,1348.6863 Q539.9063,1348.5926 540.1594,1348.3301 Q540.3188,1348.1707 540.4031,1348.1238 Q540.4969,1348.077 540.6188,1348.077 Q540.8156,1348.077 540.9656,1348.2363 Q541.125,1348.3863 541.125,1348.5926 Q541.125,1348.7988 540.9187,1349.0426 Q540.6188,1349.3895 540.1406,1349.5863 Q539.4938,1349.8582 538.7156,1349.8582 Q537.8063,1349.8582 537.0844,1349.4832 Q536.4938,1349.1832 536.0813,1348.5457 Q535.6687,1347.8988 535.6687,1347.1301 L535.6687,1346.4363 Q535.6687,1345.6395 536.0344,1344.9551 Q536.4094,1344.2613 537.0656,1343.8957 Q537.7219,1343.5207 538.4625,1343.5207 Q538.9031,1343.5207 539.2875,1343.6238 Q539.6813,1343.7176 540.0094,1343.9332 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="25.8" x="550.65" y="1349.8863">Queen</text><line style="stroke:#181818;stroke-width:0.3;" x1="448.8" x2="658.8" y1="1356.0082" y2="1356.0082"/><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="453" y="1363.0945"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="84" x="460.2" y="1367.4727">currentAge : unsigned</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="453" y="1374.2672"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="65.4" x="460.2" y="1378.6453">isAgressed : bool</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="453" y="1385.4398"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="100.8" x="460.2" y="1389.818">currentChild : ColonyAnt **</text><line style="stroke:#181818;stroke-width:0.3;" x1="448.8" x2="658.8" y1="1394.3262" y2="1394.3262"/><ellipse cx="454.8" cy="1403.2125" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="31.8" x="460.2" y="1405.7906">Queen()</text><ellipse cx="454.8" cy="1414.3852" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="76.2" x="460.2" y="1416.9633">canLayEggs() : bool</text><ellipse cx="454.8" cy="1425.5578" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="64.2" x="460.2" y="1428.1359">agressed() : void</text><ellipse cx="454.8" cy="1436.7305" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="102.6" x="460.2" y="1439.3086">update(map : Map) : Action</text><ellipse cx="454.8" cy="1447.9031" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="46.2" x="460.2" y="1450.4813">born() : void</text><ellipse cx="454.8" cy="1459.0758" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" text-decoration="underline" textLength="195.6" x="460.2" y="1461.6539">createLarva(coordinate : Coordinate) : ColonyAnt **</text><ellipse cx="454.8" cy="1470.2484" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="36.6" x="460.2" y="1472.8266">~Queen()</text></g><!--MD5=[7b5bd88a8a025decccf0c9eac4aaabe9]
class Worker--><g id="elem_Worker"><rect codeLine="94" fill="#F1F1F1" height="118.1812" id="Worker" rx="1.5" ry="1.5" style="stroke:#181818;stroke-width:0.3;" width="173.4" x="300.3" y="1746.6082"/><ellipse cx="370.65" cy="1756.2082" fill="#ADD1B2" rx="6.6" ry="6.6" style="stroke:#181818;stroke-width:0.6;"/><path d="M372.3094,1753.7332 Q372.4031,1753.602 372.5156,1753.5363 Q372.6281,1753.4707 372.7594,1753.4707 Q372.9844,1753.4707 373.125,1753.6301 Q373.2656,1753.7801 373.2656,1754.1457 L373.2656,1755.0176 Q373.2656,1755.3832 373.125,1755.5426 Q372.9844,1755.702 372.7594,1755.702 Q372.5531,1755.702 372.4313,1755.5801 Q372.3094,1755.4676 372.2438,1755.1582 Q372.2156,1754.9426 372.1031,1754.8301 Q371.9063,1754.6051 371.5406,1754.4738 Q371.175,1754.3426 370.8,1754.3426 Q370.3406,1754.3426 369.9563,1754.5395 Q369.5813,1754.7363 369.2813,1755.1863 Q368.9906,1755.6363 368.9906,1756.2551 L368.9906,1756.9113 Q368.9906,1757.652 369.525,1758.1488 Q370.0594,1758.6363 371.0156,1758.6363 Q371.5781,1758.6363 371.9719,1758.4863 Q372.2063,1758.3926 372.4594,1758.1301 Q372.6188,1757.9707 372.7031,1757.9238 Q372.7969,1757.877 372.9188,1757.877 Q373.1156,1757.877 373.2656,1758.0363 Q373.425,1758.1863 373.425,1758.3926 Q373.425,1758.5988 373.2188,1758.8426 Q372.9188,1759.1895 372.4406,1759.3863 Q371.7938,1759.6582 371.0156,1759.6582 Q370.1063,1759.6582 369.3844,1759.2832 Q368.7938,1758.9832 368.3812,1758.3457 Q367.9688,1757.6988 367.9688,1756.9301 L367.9688,1756.2363 Q367.9688,1755.4395 368.3344,1754.7551 Q368.7094,1754.0613 369.3656,1753.6957 Q370.0219,1753.3207 370.7625,1753.3207 Q371.2031,1753.3207 371.5875,1753.4238 Q371.9813,1753.5176 372.3094,1753.7332 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="27.6" x="382.95" y="1759.6863">Worker</text><line style="stroke:#181818;stroke-width:0.3;" x1="300.9" x2="473.1" y1="1765.8082" y2="1765.8082"/><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="305.1" y="1772.8945"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="69.6" x="312.3" y="1777.2727">carringFood : bool</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="305.1" y="1784.0672"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="110.4" x="312.3" y="1788.4453">dayBeforeMajority : unsigned</text><line style="stroke:#181818;stroke-width:0.3;" x1="300.9" x2="473.1" y1="1792.9535" y2="1792.9535"/><ellipse cx="306.9" cy="1801.8398" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="33.6" x="312.3" y="1804.418">Worker()</text><ellipse cx="306.9" cy="1813.0125" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="157.8" x="312.3" y="1815.5906">setCarringFood(carringFood : bool) : void</text><ellipse cx="306.9" cy="1824.1852" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="83.4" x="312.3" y="1826.7633">isCarringFood() : bool</text><ellipse cx="306.9" cy="1835.3578" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="56.4" x="312.3" y="1837.9359">isMinor() : bool</text><ellipse cx="306.9" cy="1846.5305" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="97.8" x="312.3" y="1849.1086">update(Map map) : Action</text><ellipse cx="306.9" cy="1857.7031" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="38.4" x="312.3" y="1860.2813">~Worker()</text></g><!--MD5=[ab18ab109d20d07a46d8dcc7319a218d]
class Soldier--><g id="elem_Soldier"><rect codeLine="106" fill="#F1F1F1" height="95.8359" id="Soldier" rx="1.5" ry="1.5" style="stroke:#181818;stroke-width:0.3;" width="144" x="625.2" y="1586.1082"/><ellipse cx="681.45" cy="1595.7082" fill="#ADD1B2" rx="6.6" ry="6.6" style="stroke:#181818;stroke-width:0.6;"/><path d="M683.1094,1593.2332 Q683.2031,1593.102 683.3156,1593.0363 Q683.4281,1592.9707 683.5594,1592.9707 Q683.7844,1592.9707 683.925,1593.1301 Q684.0656,1593.2801 684.0656,1593.6457 L684.0656,1594.5176 Q684.0656,1594.8832 683.925,1595.0426 Q683.7844,1595.202 683.5594,1595.202 Q683.3531,1595.202 683.2312,1595.0801 Q683.1094,1594.9676 683.0437,1594.6582 Q683.0156,1594.4426 682.9031,1594.3301 Q682.7063,1594.1051 682.3406,1593.9738 Q681.975,1593.8426 681.6,1593.8426 Q681.1406,1593.8426 680.7563,1594.0395 Q680.3813,1594.2363 680.0813,1594.6863 Q679.7906,1595.1363 679.7906,1595.7551 L679.7906,1596.4113 Q679.7906,1597.152 680.325,1597.6488 Q680.8594,1598.1363 681.8156,1598.1363 Q682.3781,1598.1363 682.7719,1597.9863 Q683.0063,1597.8926 683.2594,1597.6301 Q683.4187,1597.4707 683.5031,1597.4238 Q683.5969,1597.377 683.7188,1597.377 Q683.9156,1597.377 684.0656,1597.5363 Q684.225,1597.6863 684.225,1597.8926 Q684.225,1598.0988 684.0188,1598.3426 Q683.7188,1598.6895 683.2406,1598.8863 Q682.5938,1599.1582 681.8156,1599.1582 Q680.9063,1599.1582 680.1844,1598.7832 Q679.5938,1598.4832 679.1813,1597.8457 Q678.7688,1597.1988 678.7688,1596.4301 L678.7688,1595.7363 Q678.7688,1594.9395 679.1344,1594.2551 Q679.5094,1593.5613 680.1656,1593.1957 Q680.8219,1592.8207 681.5625,1592.8207 Q682.0031,1592.8207 682.3875,1592.9238 Q682.7813,1593.0176 683.1094,1593.2332 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="26.4" x="693.75" y="1599.1863">Soldier</text><line style="stroke:#181818;stroke-width:0.3;" x1="625.8" x2="768.6" y1="1605.3082" y2="1605.3082"/><ellipse cx="631.8" cy="1614.1945" fill="none" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="128.4" x="637.2" y="1616.7727">dayBeforeComingBack : unsigned</text><ellipse cx="631.8" cy="1625.3672" fill="none" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="72" x="637.2" y="1627.9453">comingHome : bool</text><line style="stroke:#181818;stroke-width:0.3;" x1="625.8" x2="768.6" y1="1632.4535" y2="1632.4535"/><ellipse cx="631.8" cy="1641.3398" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="32.4" x="637.2" y="1643.918">Soldier()</text><ellipse cx="631.8" cy="1652.5125" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="85.8" x="637.2" y="1655.0906">isComingHome() : bool</text><ellipse cx="631.8" cy="1663.6852" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="102.6" x="637.2" y="1666.2633">update(map : Map) : Action</text><ellipse cx="631.8" cy="1674.8578" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="37.2" x="637.2" y="1677.4359">~Soldier()</text></g><!--MD5=[08e2d36d1534fce6a2615a2f219923ed]
class Slaver--><g id="elem_Slaver"><rect codeLine="116" fill="#F1F1F1" height="84.6633" id="Slaver" rx="1.5" ry="1.5" style="stroke:#181818;stroke-width:0.3;" width="94.8" x="495" y="1763.4082"/><ellipse cx="527.85" cy="1773.0082" fill="#ADD1B2" rx="6.6" ry="6.6" style="stroke:#181818;stroke-width:0.6;"/><path d="M529.5094,1770.5332 Q529.6031,1770.402 529.7156,1770.3363 Q529.8281,1770.2707 529.9594,1770.2707 Q530.1844,1770.2707 530.325,1770.4301 Q530.4656,1770.5801 530.4656,1770.9457 L530.4656,1771.8176 Q530.4656,1772.1832 530.325,1772.3426 Q530.1844,1772.502 529.9594,1772.502 Q529.7531,1772.502 529.6313,1772.3801 Q529.5094,1772.2676 529.4438,1771.9582 Q529.4156,1771.7426 529.3031,1771.6301 Q529.1062,1771.4051 528.7406,1771.2738 Q528.375,1771.1426 528,1771.1426 Q527.5406,1771.1426 527.1563,1771.3395 Q526.7813,1771.5363 526.4812,1771.9863 Q526.1906,1772.4363 526.1906,1773.0551 L526.1906,1773.7113 Q526.1906,1774.452 526.725,1774.9488 Q527.2594,1775.4363 528.2156,1775.4363 Q528.7781,1775.4363 529.1719,1775.2863 Q529.4063,1775.1926 529.6594,1774.9301 Q529.8188,1774.7707 529.9031,1774.7238 Q529.9969,1774.677 530.1188,1774.677 Q530.3156,1774.677 530.4656,1774.8363 Q530.625,1774.9863 530.625,1775.1926 Q530.625,1775.3988 530.4187,1775.6426 Q530.1188,1775.9895 529.6406,1776.1863 Q528.9938,1776.4582 528.2156,1776.4582 Q527.3063,1776.4582 526.5844,1776.0832 Q525.9938,1775.7832 525.5813,1775.1457 Q525.1687,1774.4988 525.1687,1773.7301 L525.1687,1773.0363 Q525.1687,1772.2395 525.5344,1771.5551 Q525.9094,1770.8613 526.5656,1770.4957 Q527.2219,1770.1207 527.9625,1770.1207 Q528.4031,1770.1207 528.7875,1770.2238 Q529.1813,1770.3176 529.5094,1770.5332 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="24" x="540.15" y="1776.4863">Slaver</text><line style="stroke:#181818;stroke-width:0.3;" x1="495.6" x2="589.2" y1="1782.6082" y2="1782.6082"/><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="499.8" y="1789.6945"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="79.2" x="507" y="1794.0727">isCarringLarva : bool</text><line style="stroke:#181818;stroke-width:0.3;" x1="495.6" x2="589.2" y1="1798.5809" y2="1798.5809"/><ellipse cx="501.6" cy="1807.4672" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="30" x="507" y="1810.0453">Slaver()</text><ellipse cx="501.6" cy="1818.6398" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="77.4" x="507" y="1821.218">carringLarva() : bool</text><ellipse cx="501.6" cy="1829.8125" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="58.2" x="507" y="1832.3906">update():Action</text><ellipse cx="501.6" cy="1840.9852" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="34.8" x="507" y="1843.5633">~Slaver()</text></g><!--MD5=[1ed6d5af90539a82e740abba43dd90d2]
class Scout--><g id="elem_Scout"><rect codeLine="125" fill="#F1F1F1" height="84.6633" id="Scout" rx="1.5" ry="1.5" style="stroke:#181818;stroke-width:0.3;" width="126" x="610.8" y="1763.4082"/><ellipse cx="660.45" cy="1773.0082" fill="#ADD1B2" rx="6.6" ry="6.6" style="stroke:#181818;stroke-width:0.6;"/><path d="M662.1094,1770.5332 Q662.2031,1770.402 662.3156,1770.3363 Q662.4281,1770.2707 662.5594,1770.2707 Q662.7844,1770.2707 662.925,1770.4301 Q663.0656,1770.5801 663.0656,1770.9457 L663.0656,1771.8176 Q663.0656,1772.1832 662.925,1772.3426 Q662.7844,1772.502 662.5594,1772.502 Q662.3531,1772.502 662.2312,1772.3801 Q662.1094,1772.2676 662.0437,1771.9582 Q662.0156,1771.7426 661.9031,1771.6301 Q661.7063,1771.4051 661.3406,1771.2738 Q660.975,1771.1426 660.6,1771.1426 Q660.1406,1771.1426 659.7563,1771.3395 Q659.3813,1771.5363 659.0813,1771.9863 Q658.7906,1772.4363 658.7906,1773.0551 L658.7906,1773.7113 Q658.7906,1774.452 659.325,1774.9488 Q659.8594,1775.4363 660.8156,1775.4363 Q661.3781,1775.4363 661.7719,1775.2863 Q662.0063,1775.1926 662.2594,1774.9301 Q662.4187,1774.7707 662.5031,1774.7238 Q662.5969,1774.677 662.7188,1774.677 Q662.9156,1774.677 663.0656,1774.8363 Q663.225,1774.9863 663.225,1775.1926 Q663.225,1775.3988 663.0188,1775.6426 Q662.7188,1775.9895 662.2406,1776.1863 Q661.5938,1776.4582 660.8156,1776.4582 Q659.9063,1776.4582 659.1844,1776.0832 Q658.5938,1775.7832 658.1813,1775.1457 Q657.7688,1774.4988 657.7688,1773.7301 L657.7688,1773.0363 Q657.7688,1772.2395 658.1344,1771.5551 Q658.5094,1770.8613 659.1656,1770.4957 Q659.8219,1770.1207 660.5625,1770.1207 Q661.0031,1770.1207 661.3875,1770.2238 Q661.7813,1770.3176 662.1094,1770.5332 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="21.6" x="672.75" y="1776.4863">Scout</text><line style="stroke:#181818;stroke-width:0.3;" x1="611.4" x2="736.2" y1="1782.6082" y2="1782.6082"/><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="615.6" y="1789.6945"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="110.4" x="622.8" y="1794.0727">dayBeforeMajority : unsigned</text><line style="stroke:#181818;stroke-width:0.3;" x1="611.4" x2="736.2" y1="1798.5809" y2="1798.5809"/><ellipse cx="617.4" cy="1807.4672" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="27.6" x="622.8" y="1810.0453">Scout()</text><ellipse cx="617.4" cy="1818.6398" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="56.4" x="622.8" y="1821.218">isMinor() : bool</text><ellipse cx="617.4" cy="1829.8125" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="102.6" x="622.8" y="1832.3906">update(map : Map) : Action</text><ellipse cx="617.4" cy="1840.9852" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="32.4" x="622.8" y="1843.5633">~Scout()</text></g><!--MD5=[e17fa84612cd31b11e01736fde1f3a71]
class Colony--><g id="elem_Colony"><rect codeLine="134" fill="#F1F1F1" height="162.8719" id="Colony" rx="1.5" ry="1.5" style="stroke:#181818;stroke-width:0.3;" width="150.6" x="478.5" y="1053.9082"/><ellipse cx="538.05" cy="1063.5082" fill="#ADD1B2" rx="6.6" ry="6.6" style="stroke:#181818;stroke-width:0.6;"/><path d="M539.7094,1061.0332 Q539.8031,1060.902 539.9156,1060.8363 Q540.0281,1060.7707 540.1594,1060.7707 Q540.3844,1060.7707 540.525,1060.9301 Q540.6656,1061.0801 540.6656,1061.4457 L540.6656,1062.3176 Q540.6656,1062.6832 540.525,1062.8426 Q540.3844,1063.002 540.1594,1063.002 Q539.9531,1063.002 539.8313,1062.8801 Q539.7094,1062.7676 539.6438,1062.4582 Q539.6156,1062.2426 539.5031,1062.1301 Q539.3063,1061.9051 538.9406,1061.7738 Q538.575,1061.6426 538.2,1061.6426 Q537.7406,1061.6426 537.3562,1061.8395 Q536.9812,1062.0363 536.6813,1062.4863 Q536.3906,1062.9363 536.3906,1063.5551 L536.3906,1064.2113 Q536.3906,1064.952 536.925,1065.4488 Q537.4594,1065.9363 538.4156,1065.9363 Q538.9781,1065.9363 539.3719,1065.7863 Q539.6062,1065.6926 539.8594,1065.4301 Q540.0188,1065.2707 540.1031,1065.2238 Q540.1969,1065.177 540.3188,1065.177 Q540.5156,1065.177 540.6656,1065.3363 Q540.825,1065.4863 540.825,1065.6926 Q540.825,1065.8988 540.6188,1066.1426 Q540.3188,1066.4895 539.8406,1066.6863 Q539.1938,1066.9582 538.4156,1066.9582 Q537.5063,1066.9582 536.7844,1066.5832 Q536.1938,1066.2832 535.7813,1065.6457 Q535.3688,1064.9988 535.3688,1064.2301 L535.3688,1063.5363 Q535.3688,1062.7395 535.7344,1062.0551 Q536.1094,1061.3613 536.7656,1060.9957 Q537.4219,1060.6207 538.1625,1060.6207 Q538.6031,1060.6207 538.9875,1060.7238 Q539.3813,1060.8176 539.7094,1061.0332 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="26.4" x="550.35" y="1066.9863">Colony</text><line style="stroke:#181818;stroke-width:0.3;" x1="479.1" x2="628.5" y1="1073.1082" y2="1073.1082"/><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="483.3" y="1080.1945"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="99" x="490.5" y="1084.5727">listAnts : std::vector&lt;Ant*&gt;</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="483.3" y="1091.3672"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="62.4" x="490.5" y="1095.7453">queen : Queen *</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="483.3" y="1102.5398"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="98.4" x="490.5" y="1106.918">foodStock : unsigned long</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="483.3" y="1113.7125"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="60" x="490.5" y="1118.0906">days : unsigned</text><line style="stroke:#181818;stroke-width:0.3;" x1="479.1" x2="628.5" y1="1122.5988" y2="1122.5988"/><ellipse cx="485.1" cy="1131.4852" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="32.4" x="490.5" y="1134.0633">Colony()</text><ellipse cx="485.1" cy="1142.6578" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="55.2" x="490.5" y="1145.2359">update() : void</text><ellipse cx="485.1" cy="1153.8305" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="133.2" x="490.5" y="1156.4086">addLarva(ColonyAnt ** larva) : void</text><ellipse cx="485.1" cy="1165.0031" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="106.8" x="490.5" y="1167.5813">getAnts() : std::vector&lt;Ant*&gt;</text><ellipse cx="485.1" cy="1176.1758" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="75" x="490.5" y="1178.7539">getDay() : unsigned</text><ellipse cx="485.1" cy="1187.3484" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="130.2" x="490.5" y="1189.9266">getFoodQuantity() : unsigned long</text><ellipse cx="485.1" cy="1198.5211" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="135" x="490.5" y="1201.0992">addFood(quantity : unsigned) : void</text><ellipse cx="485.1" cy="1209.6938" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="37.2" x="490.5" y="1212.2719">~Colony()</text></g><!--MD5=[3be1650dbca41e05213ee5df499bfe13]
class TypeOfChunk--><g id="elem_TypeOfChunk"><rect codeLine="153" fill="#F1F1F1" height="62.318" id="TypeOfChunk" rx="1.5" ry="1.5" style="stroke:#181818;stroke-width:0.3;" width="72" x="385.2" y="1104.0082"/><ellipse cx="394.2" cy="1113.6082" fill="#EB937F" rx="6.6" ry="6.6" style="stroke:#181818;stroke-width:0.6;"/><path d="M393.5156,1114.0863 L393.5156,1115.5863 L396.1125,1115.5863 L396.1125,1115.0332 Q396.1125,1114.6676 396.2531,1114.5082 Q396.4031,1114.3488 396.6281,1114.3488 Q396.8531,1114.3488 396.9938,1114.5082 Q397.1344,1114.6676 397.1344,1115.0332 L397.1344,1116.6082 L392.3344,1116.6082 Q391.9594,1116.6082 391.8,1116.4676 Q391.65,1116.327 391.65,1116.0926 Q391.65,1115.8676 391.8094,1115.727 Q391.9688,1115.5863 392.3344,1115.5863 L392.4938,1115.5863 L392.4938,1111.5926 L392.3344,1111.5926 Q391.9594,1111.5926 391.8,1111.452 Q391.65,1111.3113 391.65,1111.077 Q391.65,1110.852 391.8,1110.7113 Q391.9594,1110.5707 392.3344,1110.5707 L396.9094,1110.5707 L396.9094,1112.127 Q396.9094,1112.4926 396.7688,1112.652 Q396.6375,1112.802 396.4031,1112.802 Q396.1781,1112.802 396.0375,1112.652 Q395.8969,1112.4926 395.8969,1112.127 L395.8969,1111.5926 L393.5156,1111.5926 L393.5156,1113.0645 L394.4063,1113.0645 Q394.4063,1112.6707 394.4813,1112.5582 Q394.6406,1112.3145 394.9219,1112.3145 Q395.1469,1112.3145 395.2875,1112.4738 Q395.4281,1112.6238 395.4281,1112.9895 L395.4281,1114.1707 Q395.4281,1114.4988 395.3531,1114.6113 Q395.1937,1114.8457 394.9219,1114.8457 Q394.6406,1114.8457 394.4813,1114.602 Q394.4063,1114.4895 394.4063,1114.0863 L393.5156,1114.0863 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="52.8" x="402.6" y="1117.0863">TypeOfChunk</text><line style="stroke:#181818;stroke-width:0.3;" x1="385.8" x2="456.6" y1="1123.2082" y2="1123.2082"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="30.6" x="388.8" y="1134.6727">EMPTY,</text><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="37.2" x="388.8" y="1145.8453">COLONY,</text><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="44.4" x="388.8" y="1157.018">OBSTACLE</text><line style="stroke:#181818;stroke-width:0.3;" x1="385.8" x2="456.6" y1="1161.5262" y2="1161.5262"/></g><!--MD5=[6e0c224d26e528c5d694b92ff8301dce]
class Chunk--><g id="elem_Chunk"><rect codeLine="159" fill="#F1F1F1" height="241.0805" id="Chunk" rx="1.5" ry="1.5" style="stroke:#181818;stroke-width:0.3;" width="217.8" x="92.1" y="1014.6082"/><ellipse cx="186.15" cy="1024.2082" fill="#ADD1B2" rx="6.6" ry="6.6" style="stroke:#181818;stroke-width:0.6;"/><path d="M187.8094,1021.7332 Q187.9031,1021.602 188.0156,1021.5363 Q188.1281,1021.4707 188.2594,1021.4707 Q188.4844,1021.4707 188.625,1021.6301 Q188.7656,1021.7801 188.7656,1022.1457 L188.7656,1023.0176 Q188.7656,1023.3832 188.625,1023.5426 Q188.4844,1023.702 188.2594,1023.702 Q188.0531,1023.702 187.9313,1023.5801 Q187.8094,1023.4676 187.7438,1023.1582 Q187.7156,1022.9426 187.6031,1022.8301 Q187.4063,1022.6051 187.0406,1022.4738 Q186.675,1022.3426 186.3,1022.3426 Q185.8406,1022.3426 185.4562,1022.5395 Q185.0812,1022.7363 184.7813,1023.1863 Q184.4906,1023.6363 184.4906,1024.2551 L184.4906,1024.9113 Q184.4906,1025.652 185.025,1026.1488 Q185.5594,1026.6363 186.5156,1026.6363 Q187.0781,1026.6363 187.4719,1026.4863 Q187.7062,1026.3926 187.9594,1026.1301 Q188.1188,1025.9707 188.2031,1025.9238 Q188.2969,1025.877 188.4188,1025.877 Q188.6156,1025.877 188.7656,1026.0363 Q188.925,1026.1863 188.925,1026.3926 Q188.925,1026.5988 188.7188,1026.8426 Q188.4188,1027.1895 187.9406,1027.3863 Q187.2938,1027.6582 186.5156,1027.6582 Q185.6063,1027.6582 184.8844,1027.2832 Q184.2938,1026.9832 183.8813,1026.3457 Q183.4688,1025.6988 183.4688,1024.9301 L183.4688,1024.2363 Q183.4688,1023.4395 183.8344,1022.7551 Q184.2094,1022.0613 184.8656,1021.6957 Q185.5219,1021.3207 186.2625,1021.3207 Q186.7031,1021.3207 187.0875,1021.4238 Q187.4813,1021.5176 187.8094,1021.7332 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="24.6" x="198.45" y="1027.6863">Chunk</text><line style="stroke:#181818;stroke-width:0.3;" x1="92.7" x2="309.3" y1="1033.8082" y2="1033.8082"/><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="96.9" y="1040.8945"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="109.8" x="104.1" y="1045.2727">typeOfChunk : TypeOfChunk</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="96.9" y="1052.0672"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="90.6" x="104.1" y="1056.4453">foodQuantity : unsigned</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="96.9" y="1063.2398"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="55.8" x="104.1" y="1067.618">explored : bool</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="96.9" y="1074.4125"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="117" x="104.1" y="1078.7906">pheromoneQuantity : unsigned</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="96.9" y="1085.5852"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="94.8" x="104.1" y="1089.9633">listAnt : std::vector&lt;Ant*&gt;</text><line style="stroke:#181818;stroke-width:0.3;" x1="92.7" x2="309.3" y1="1094.4715" y2="1094.4715"/><ellipse cx="98.7" cy="1103.3578" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="202.2" x="104.1" y="1105.9359">Chunk(type : TypeOfChunk, foodQuantity : unsigned)</text><ellipse cx="98.7" cy="1114.5305" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="146.4" x="104.1" y="1117.1086">setTypeOfChunk(type : TypeOfChunk)</text><ellipse cx="98.7" cy="1125.7031" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="141" x="104.1" y="1128.2813">setFoodQuantity(quantity : unsigned)</text><ellipse cx="98.7" cy="1136.8758" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="130.8" x="104.1" y="1139.4539">getTypeOfChunk() : TypeOfChunk</text><ellipse cx="98.7" cy="1148.0484" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="111.6" x="104.1" y="1150.6266">getFoodQuantity() : unsigned</text><ellipse cx="98.7" cy="1159.2211" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="103.8" x="104.1" y="1161.7992">getPheromone() : unsigned</text><ellipse cx="98.7" cy="1170.3938" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="133.2" x="104.1" y="1172.9719">setPheromone(quantity : unsigned)</text><ellipse cx="98.7" cy="1181.5664" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="68.4" x="104.1" y="1184.1445">isExplored() : bool</text><ellipse cx="98.7" cy="1192.7391" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="106.2" x="104.1" y="1195.3172">setExplored(explored : bool)</text><ellipse cx="98.7" cy="1203.9117" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="67.8" x="104.1" y="1206.4898">addAnt(ant : Ant*)</text><ellipse cx="98.7" cy="1215.0844" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="81.6" x="104.1" y="1217.6625">removeAnt(ant : Ant*)</text><ellipse cx="98.7" cy="1226.257" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="106.8" x="104.1" y="1228.8352">getAnts() : std::vector&lt;Ant*&gt;</text><ellipse cx="98.7" cy="1237.4297" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="122.4" x="104.1" y="1240.0078">setAnts(ants : std::vector&lt;Ant*&gt;)</text><ellipse cx="98.7" cy="1248.6023" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="34.8" x="104.1" y="1251.1805">~Chuck()</text></g><!--MD5=[4dfc6a72b8dd60daa1b635d583ff79da]
class Map--><g id="elem_Map"><rect codeLine="184" fill="#F1F1F1" height="229.9078" id="Map" rx="1.5" ry="1.5" style="stroke:#181818;stroke-width:0.3;" width="280.2" x="60.9" y="737.4082"/><ellipse cx="190.35" cy="747.0082" fill="#ADD1B2" rx="6.6" ry="6.6" style="stroke:#181818;stroke-width:0.6;"/><path d="M192.0094,744.5332 Q192.1031,744.402 192.2156,744.3363 Q192.3281,744.2707 192.4594,744.2707 Q192.6844,744.2707 192.825,744.4301 Q192.9656,744.5801 192.9656,744.9457 L192.9656,745.8176 Q192.9656,746.1832 192.825,746.3426 Q192.6844,746.502 192.4594,746.502 Q192.2531,746.502 192.1313,746.3801 Q192.0094,746.2676 191.9438,745.9582 Q191.9156,745.7426 191.8031,745.6301 Q191.6063,745.4051 191.2406,745.2738 Q190.875,745.1426 190.5,745.1426 Q190.0406,745.1426 189.6563,745.3395 Q189.2813,745.5363 188.9813,745.9863 Q188.6906,746.4363 188.6906,747.0551 L188.6906,747.7113 Q188.6906,748.452 189.225,748.9488 Q189.7594,749.4363 190.7156,749.4363 Q191.2781,749.4363 191.6719,749.2863 Q191.9063,749.1926 192.1594,748.9301 Q192.3188,748.7707 192.4031,748.7238 Q192.4969,748.677 192.6188,748.677 Q192.8156,748.677 192.9656,748.8363 Q193.125,748.9863 193.125,749.1926 Q193.125,749.3988 192.9188,749.6426 Q192.6188,749.9895 192.1406,750.1863 Q191.4938,750.4582 190.7156,750.4582 Q189.8063,750.4582 189.0844,750.0832 Q188.4938,749.7832 188.0812,749.1457 Q187.6688,748.4988 187.6688,747.7301 L187.6688,747.0363 Q187.6688,746.2395 188.0344,745.5551 Q188.4094,744.8613 189.0656,744.4957 Q189.7219,744.1207 190.4625,744.1207 Q190.9031,744.1207 191.2875,744.2238 Q191.6813,744.3176 192.0094,744.5332 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="16.2" x="202.65" y="750.4863">Map</text><line style="stroke:#181818;stroke-width:0.3;" x1="61.5" x2="340.5" y1="756.6082" y2="756.6082"/><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="65.7" y="763.6945"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="68.4" x="72.9" y="768.0727">chunks : Chunk[][]</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="65.7" y="774.8672"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="61.2" x="72.9" y="779.2453">width : unsigned</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="65.7" y="786.0398"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="65.4" x="72.9" y="790.418">height : unsigned</text><line style="stroke:#181818;stroke-width:0.3;" x1="61.5" x2="340.5" y1="794.9262" y2="794.9262"/><ellipse cx="67.5" cy="803.8125" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="144" x="72.9" y="806.3906">Map(width:unsigned, height:unsigned)</text><ellipse cx="67.5" cy="814.9852" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="61.8" x="72.9" y="817.5633">printMap() : void</text><ellipse cx="67.5" cy="826.1578" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="139.2" x="72.9" y="828.7359">getChunk(x : unsigned, y : unsigned)</text><ellipse cx="67.5" cy="837.3305" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="88.2" x="72.9" y="839.9086">getChunks() : Chunk[][]</text><ellipse cx="67.5" cy="848.5031" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="264.6" x="72.9" y="851.0813">changeTypeOfChunk(x : unsigned, y : unsigned, type : TypeOfChunk)</text><ellipse cx="67.5" cy="859.6758" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="84" x="72.9" y="862.2539">getHeigth() : unsigned</text><ellipse cx="67.5" cy="870.8484" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="81.6" x="72.9" y="873.4266">getWidth() : unsigned</text><ellipse cx="67.5" cy="882.0211" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="126" x="72.9" y="884.5992">operator[](x : unsigned) : Chunk *</text><ellipse cx="67.5" cy="893.1938" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="164.4" x="72.9" y="895.7719">operator[](coordinate : Coordinate) : Chunk</text><ellipse cx="67.5" cy="904.3664" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="171.6" x="72.9" y="906.9445">addAnt(x : unsigned, y : unsigned, ant : Ant *)</text><ellipse cx="67.5" cy="915.5391" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="185.4" x="72.9" y="918.1172">removeAnt(x : unsigned, y : unsigned, ant : Ant *)</text><ellipse cx="67.5" cy="926.7117" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="207.6" x="72.9" y="929.2898">setExplored(x : unsigned, y : unsigned, explored : bool)</text><ellipse cx="67.5" cy="937.8844" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="205.8" x="72.9" y="940.4625">getFoodQuantity(x : unsigned, y : unsigned) :unsigned</text><ellipse cx="67.5" cy="949.057" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="259.2" x="72.9" y="951.6352">changeFoodQuantity (x : unsigned,y : unsigned, quantity : unsigned)</text><ellipse cx="67.5" cy="960.2297" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="27" x="72.9" y="962.8078">~Map()</text></g><!--MD5=[ac8a92462842405763f44a8f58a8a477]
class MapBuilder--><g id="elem_MapBuilder"><rect codeLine="207" fill="#F1F1F1" height="185.2172" id="MapBuilder" rx="1.5" ry="1.5" style="stroke:#181818;stroke-width:0.3;" width="290.4" x="13.2" y="504.6082"/><ellipse cx="134.55" cy="514.2082" fill="#ADD1B2" rx="6.6" ry="6.6" style="stroke:#181818;stroke-width:0.6;"/><path d="M136.2094,511.7332 Q136.3031,511.602 136.4156,511.5363 Q136.5281,511.4707 136.6594,511.4707 Q136.8844,511.4707 137.025,511.6301 Q137.1656,511.7801 137.1656,512.1457 L137.1656,513.0176 Q137.1656,513.3832 137.025,513.5426 Q136.8844,513.702 136.6594,513.702 Q136.4531,513.702 136.3312,513.5801 Q136.2094,513.4676 136.1437,513.1582 Q136.1156,512.9426 136.0031,512.8301 Q135.8063,512.6051 135.4406,512.4738 Q135.075,512.3426 134.7,512.3426 Q134.2406,512.3426 133.8563,512.5395 Q133.4813,512.7363 133.1813,513.1863 Q132.8906,513.6363 132.8906,514.2551 L132.8906,514.9113 Q132.8906,515.652 133.425,516.1488 Q133.9594,516.6363 134.9156,516.6363 Q135.4781,516.6363 135.8719,516.4863 Q136.1063,516.3926 136.3594,516.1301 Q136.5187,515.9707 136.6031,515.9238 Q136.6969,515.877 136.8188,515.877 Q137.0156,515.877 137.1656,516.0363 Q137.325,516.1863 137.325,516.3926 Q137.325,516.5988 137.1188,516.8426 Q136.8188,517.1895 136.3406,517.3863 Q135.6938,517.6582 134.9156,517.6582 Q134.0063,517.6582 133.2844,517.2832 Q132.6938,516.9832 132.2813,516.3457 Q131.8688,515.6988 131.8688,514.9301 L131.8688,514.2363 Q131.8688,513.4395 132.2344,512.7551 Q132.6094,512.0613 133.2656,511.6957 Q133.9219,511.3207 134.6625,511.3207 Q135.1031,511.3207 135.4875,511.4238 Q135.8813,511.5176 136.2094,511.7332 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="42.6" x="146.85" y="517.6863">MapBuilder</text><line style="stroke:#181818;stroke-width:0.3;" x1="13.8" x2="303" y1="523.8082" y2="523.8082"/><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="18" y="530.8945"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="61.2" x="25.2" y="535.2727">width : unsigned</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="18" y="542.0672"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="65.4" x="25.2" y="546.4453">height : unsigned</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="18" y="553.2398"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="124.2" x="25.2" y="557.618">std::list&lt;Coordinate&gt; freeChunks</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="18" y="564.4125"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="45" x="25.2" y="568.7906">map : Map *</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="18" y="575.5852"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="96.6" x="25.2" y="579.9633">obstacleCanCollide : bool</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="18" y="586.7578"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="65.4" x="25.2" y="591.1359">mt : std::mt19937</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="18" y="597.9305"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="169.2" x="25.2" y="602.3086">dist : std::uniform_int_distribution&lt;unsigned&gt;</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="18" y="609.1031"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="177.6" x="25.2" y="613.4812">dist_x : std::uniform_int_distribution&lt;unsigned&gt;</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="18" y="620.2758"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="178.2" x="25.2" y="624.6539">dist_y : std::uniform_int_distribution&lt;unsigned&gt;</text><line style="stroke:#181818;stroke-width:0.3;" x1="13.8" x2="303" y1="629.1621" y2="629.1621"/><ellipse cx="19.8" cy="638.0484" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="274.8" x="25.2" y="640.6266">MapBuilder(width : unsigned, height : unsigned, borderCanCollide : bool)</text><ellipse cx="19.8" cy="649.2211" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="190.2" x="25.2" y="651.7992">addObstacles(number : unsigned, size : unsigned)</text><ellipse cx="19.8" cy="660.3938" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="187.8" x="25.2" y="662.9719">addFood(number : unsigned, quantity : unsigned)</text><ellipse cx="19.8" cy="671.5664" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="63" x="25.2" y="674.1445">getMap() : Map *</text><ellipse cx="19.8" cy="682.7391" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="53.4" x="25.2" y="685.3172">~MapBuilder()</text></g><!--MD5=[b6dcce5e5ef3c84b0b048d11301373dd]
class Game--><g id="elem_Game"><rect codeLine="226" fill="#F1F1F1" height="162.8719" id="Game" rx="1.5" ry="1.5" style="stroke:#181818;stroke-width:0.3;" width="450" x="324.6" y="516.0082"/><ellipse cx="535.65" cy="525.6082" fill="#ADD1B2" rx="6.6" ry="6.6" style="stroke:#181818;stroke-width:0.6;"/><path d="M537.3094,523.1332 Q537.4031,523.002 537.5156,522.9363 Q537.6281,522.8707 537.7594,522.8707 Q537.9844,522.8707 538.125,523.0301 Q538.2656,523.1801 538.2656,523.5457 L538.2656,524.4176 Q538.2656,524.7832 538.125,524.9426 Q537.9844,525.102 537.7594,525.102 Q537.5531,525.102 537.4313,524.9801 Q537.3094,524.8676 537.2438,524.5582 Q537.2156,524.3426 537.1031,524.2301 Q536.9063,524.0051 536.5406,523.8738 Q536.175,523.7426 535.8,523.7426 Q535.3406,523.7426 534.9563,523.9395 Q534.5813,524.1363 534.2813,524.5863 Q533.9906,525.0363 533.9906,525.6551 L533.9906,526.3113 Q533.9906,527.052 534.525,527.5488 Q535.0594,528.0363 536.0156,528.0363 Q536.5781,528.0363 536.9719,527.8863 Q537.2063,527.7926 537.4594,527.5301 Q537.6188,527.3707 537.7031,527.3238 Q537.7969,527.277 537.9187,527.277 Q538.1156,527.277 538.2656,527.4363 Q538.425,527.5863 538.425,527.7926 Q538.425,527.9988 538.2188,528.2426 Q537.9187,528.5895 537.4406,528.7863 Q536.7937,529.0582 536.0156,529.0582 Q535.1062,529.0582 534.3844,528.6832 Q533.7937,528.3832 533.3813,527.7457 Q532.9688,527.0988 532.9688,526.3301 L532.9688,525.6363 Q532.9688,524.8395 533.3344,524.1551 Q533.7094,523.4613 534.3656,523.0957 Q535.0219,522.7207 535.7625,522.7207 Q536.2031,522.7207 536.5875,522.8238 Q536.9812,522.9176 537.3094,523.1332 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="22.8" x="547.95" y="529.0863">Game</text><line style="stroke:#181818;stroke-width:0.3;" x1="325.2" x2="774" y1="535.2082" y2="535.2082"/><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="329.4" y="542.2945"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="45" x="336.6" y="546.6727">map : Map *</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="329.4" y="553.4672"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="63.6" x="336.6" y="557.8453">colony : Colony *</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="329.4" y="564.6398"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="196.8" x="336.6" y="569.018">colonyEvolutionExporter : ColonyEvolutionExporter *</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="329.4" y="575.8125"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="61.2" x="336.6" y="580.1906">isRunning : bool</text><line style="stroke:#181818;stroke-width:0.3;" x1="325.2" x2="774" y1="584.6988" y2="584.6988"/><ellipse cx="331.2" cy="593.5852" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="142.2" x="336.6" y="596.1633">Game(map : Map *, colony : Colony *)</text><ellipse cx="331.2" cy="604.7578" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="63" x="336.6" y="607.3359">getMap() : Map *</text><ellipse cx="331.2" cy="615.9305" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="81" x="336.6" y="618.5086">updateAllAnts() : void</text><ellipse cx="331.2" cy="627.1031" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="83.4" x="336.6" y="629.6813">getColony() : Colony *</text><ellipse cx="331.2" cy="638.2758" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="67.8" x="336.6" y="640.8539">stopGame() : void</text><ellipse cx="331.2" cy="649.4484" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="45.6" x="336.6" y="652.0266">start() : void</text><ellipse cx="331.2" cy="660.6211" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="307.8" x="336.6" y="663.1992">updateAnt(map : Map *, ant : Ant *, action : Action, coordinate : Coordinate) : bool</text><ellipse cx="331.2" cy="671.7937" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" text-decoration="underline" textLength="434.4" x="336.6" y="674.3719">getRandomDirection(map : Map, coordinate : Coordinate, needToBeExplored : bool, containFood : bool) : Direction</text></g><!--MD5=[a66e7fd0b0872b489e966ef46c1dd2c9]
class ColonyEvolutionExporter--><g id="elem_ColonyEvolutionExporter"><rect codeLine="248" fill="#F1F1F1" height="174.0445" id="ColonyEvolutionExporter" rx="1.5" ry="1.5" style="stroke:#181818;stroke-width:0.3;" width="191.4" x="888.3" y="510.3082"/><ellipse cx="934.95" cy="519.9082" fill="#ADD1B2" rx="6.6" ry="6.6" style="stroke:#181818;stroke-width:0.6;"/><path d="M936.6094,517.4332 Q936.7031,517.302 936.8156,517.2363 Q936.9281,517.1707 937.0594,517.1707 Q937.2844,517.1707 937.425,517.3301 Q937.5656,517.4801 937.5656,517.8457 L937.5656,518.7176 Q937.5656,519.0832 937.425,519.2426 Q937.2844,519.402 937.0594,519.402 Q936.8531,519.402 936.7312,519.2801 Q936.6094,519.1676 936.5437,518.8582 Q936.5156,518.6426 936.4031,518.5301 Q936.2063,518.3051 935.8406,518.1738 Q935.475,518.0426 935.1,518.0426 Q934.6406,518.0426 934.2562,518.2395 Q933.8812,518.4363 933.5813,518.8863 Q933.2906,519.3363 933.2906,519.9551 L933.2906,520.6113 Q933.2906,521.352 933.825,521.8488 Q934.3594,522.3363 935.3156,522.3363 Q935.8781,522.3363 936.2719,522.1863 Q936.5062,522.0926 936.7594,521.8301 Q936.9187,521.6707 937.0031,521.6238 Q937.0969,521.577 937.2188,521.577 Q937.4156,521.577 937.5656,521.7363 Q937.725,521.8863 937.725,522.0926 Q937.725,522.2988 937.5188,522.5426 Q937.2188,522.8895 936.7406,523.0863 Q936.0938,523.3582 935.3156,523.3582 Q934.4063,523.3582 933.6844,522.9832 Q933.0938,522.6832 932.6813,522.0457 Q932.2688,521.3988 932.2688,520.6301 L932.2688,519.9363 Q932.2688,519.1395 932.6344,518.4551 Q933.0094,517.7613 933.6656,517.3957 Q934.3219,517.0207 935.0625,517.0207 Q935.5031,517.0207 935.8875,517.1238 Q936.2813,517.2176 936.6094,517.4332 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="93" x="947.25" y="523.3863">ColonyEvolutionExporter</text><line style="stroke:#181818;stroke-width:0.3;" x1="888.9" x2="1079.1" y1="529.5082" y2="529.5082"/><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="893.1" y="536.5945"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="57.6" x="900.3" y="540.9727">fileIn : ofstream</text><line style="stroke:#181818;stroke-width:0.3;" x1="888.9" x2="1079.1" y1="545.4809" y2="545.4809"/><ellipse cx="894.9" cy="554.3672" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="175.8" x="900.3" y="556.9453">ColonyEvolutionExporter(fileName : std::string)</text><ellipse cx="894.9" cy="565.5398" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="113.4" x="900.3" y="568.118">update(colony : Colony) : void</text><polygon fill="#FFFF44" points="894.9,573.7125,897.3,576.1125,894.9,578.5125,892.5,576.1125" style="stroke:#B38D22;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="99" x="900.3" y="579.2906">ColonyEvolutionExporter()</text><rect fill="#F24D5C" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="893.1" y="586.0852"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="44.4" x="900.3" y="590.4633">next() : void</text><rect fill="#F24D5C" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="893.1" y="597.2578"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="60.6" x="900.3" y="601.6359">nextLine() : void</text><rect fill="#F24D5C" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="893.1" y="608.4305"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="123" x="900.3" y="612.8086">append(string : std::string) : void</text><rect fill="#F24D5C" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="893.1" y="619.6031"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="100.2" x="900.3" y="623.9812">append(integer : int) : void</text><rect fill="#F24D5C" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="893.1" y="630.7758"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="126" x="900.3" y="635.1539">append(integer : unsigned) : void</text><rect fill="#F24D5C" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="893.1" y="641.9484"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="144.6" x="900.3" y="646.3266">append(integer : unsigned long) : void</text><rect fill="#F24D5C" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="893.1" y="653.1211"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="107.4" x="900.3" y="657.4992">append(integer : long) : void</text><rect fill="#F24D5C" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="893.1" y="664.2937"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="118.8" x="900.3" y="668.6719">append(floatValue : float) : void</text><rect fill="#F24D5C" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="893.1" y="675.4664"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="138" x="900.3" y="679.8445">append(doubleValue : double) : void</text></g><!--MD5=[7df3a7c071e1bc5e1ddc589ea8dc823f]
class SFMLGameEngine--><g id="elem_SFMLGameEngine"><rect codeLine="270" fill="#F1F1F1" height="375.1523" id="SFMLGameEngine" rx="1.5" ry="1.5" style="stroke:#181818;stroke-width:0.3;" width="262.8" x="418.2" y="52.8082"/><ellipse cx="511.35" cy="62.4082" fill="#ADD1B2" rx="6.6" ry="6.6" style="stroke:#181818;stroke-width:0.6;"/><path d="M513.0094,59.9332 Q513.1031,59.802 513.2156,59.7363 Q513.3281,59.6707 513.4594,59.6707 Q513.6844,59.6707 513.825,59.8301 Q513.9656,59.9801 513.9656,60.3457 L513.9656,61.2176 Q513.9656,61.5832 513.825,61.7426 Q513.6844,61.902 513.4594,61.902 Q513.2531,61.902 513.1313,61.7801 Q513.0094,61.6676 512.9438,61.3582 Q512.9156,61.1426 512.8031,61.0301 Q512.6062,60.8051 512.2406,60.6738 Q511.875,60.5426 511.5,60.5426 Q511.0406,60.5426 510.6563,60.7395 Q510.2813,60.9363 509.9813,61.3863 Q509.6906,61.8363 509.6906,62.4551 L509.6906,63.1113 Q509.6906,63.852 510.225,64.3488 Q510.7594,64.8363 511.7156,64.8363 Q512.2781,64.8363 512.6719,64.6863 Q512.9063,64.5926 513.1594,64.3301 Q513.3188,64.1707 513.4031,64.1238 Q513.4969,64.077 513.6188,64.077 Q513.8156,64.077 513.9656,64.2363 Q514.125,64.3863 514.125,64.5926 Q514.125,64.7988 513.9187,65.0426 Q513.6188,65.3895 513.1406,65.5863 Q512.4938,65.8582 511.7156,65.8582 Q510.8063,65.8582 510.0844,65.4832 Q509.4938,65.1832 509.0812,64.5457 Q508.6688,63.8988 508.6688,63.1301 L508.6688,62.4363 Q508.6688,61.6395 509.0344,60.9551 Q509.4094,60.2613 510.0656,59.8957 Q510.7219,59.5207 511.4625,59.5207 Q511.9031,59.5207 512.2875,59.6238 Q512.6813,59.7176 513.0094,59.9332 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="71.4" x="523.65" y="65.8863">SFMLGameEngine</text><line style="stroke:#181818;stroke-width:0.3;" x1="418.8" x2="680.4" y1="72.0082" y2="72.0082"/><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="423" y="79.0945"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="100.8" x="430.2" y="83.4727">colonyTexture : sf::Texture</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="423" y="90.2672"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="93" x="430.2" y="94.6453">foodTexture : sf::Texture</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="423" y="101.4398"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="88.2" x="430.2" y="105.818">antTexture : sf::Texture</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="423" y="112.6125"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="97.2" x="430.2" y="116.9906">grassTexture : sf::Texture</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="423" y="123.7852"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="135" x="430.2" y="128.1633">grassTextureNotVisited : sf::Texture</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="423" y="134.9578"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="92.4" x="430.2" y="139.3359">rockTexture : sf::Texture</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="423" y="146.1305"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="101.4" x="430.2" y="150.5086">workerTexture : sf::Texture</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="423" y="157.3031"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="96" x="430.2" y="161.6813">slaveTexture : sf::Texture</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="423" y="168.4758"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="101.4" x="430.2" y="172.8539">soldierTexture : sf::Texture</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="423" y="179.6484"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="96.6" x="430.2" y="184.0266">scoutTexture : sf::Texture</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="423" y="190.8211"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="50.4" x="430.2" y="195.1992">font : sf::Font</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="423" y="201.9938"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="58.8" x="430.2" y="206.3719">popup : sf::Text</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="423" y="213.1664"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="70.8" x="430.2" y="217.5445">thread : sf::Thread</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="423" y="224.3391"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="108.6" x="430.2" y="228.7172">window : sf::RenderWindow *</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="423" y="235.5117"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="57.6" x="430.2" y="239.8898">view : sf::View *</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="423" y="246.6844"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="111.6" x="430.2" y="251.0625">control : SFMLEventHandler *</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="423" y="257.857"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="56.4" x="430.2" y="262.2352">game : Game *</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="423" y="269.0297"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="65.4" x="430.2" y="273.4078">height : unsigned</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="423" y="280.2023"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="61.2" x="430.2" y="284.5805">width : unsigned</text><line style="stroke:#181818;stroke-width:0.3;" x1="418.8" x2="680.4" y1="289.0887" y2="289.0887"/><ellipse cx="424.8" cy="297.975" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="247.2" x="430.2" y="300.5531">SFMLGameEngine(window : sf::RenderWindow *, game : Game *)</text><ellipse cx="424.8" cy="309.1477" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="81.6" x="430.2" y="311.7258">createTexture() : void</text><ellipse cx="424.8" cy="320.3203" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="98.4" x="430.2" y="322.8984">renderingFunction() : void</text><ellipse cx="424.8" cy="331.493" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="45.6" x="430.2" y="334.0711">start() : void</text><ellipse cx="424.8" cy="342.6656" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="45" x="430.2" y="345.2438">stop() : void</text><ellipse cx="424.8" cy="353.8383" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="64.2" x="430.2" y="356.4164">terminate() : void</text><ellipse cx="424.8" cy="365.0109" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="129" x="430.2" y="367.5891">getWindow() : sf::RenderWindow *</text><ellipse cx="424.8" cy="376.1836" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="76.8" x="430.2" y="378.7617">getView() : sf::View *</text><ellipse cx="424.8" cy="387.3563" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="170.4" x="430.2" y="389.9344">setPopup(string : std::string, int x, int y) : void</text><ellipse cx="424.8" cy="398.5289" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="225" x="430.2" y="401.107">setSFMLEventHandler(control : SFMLEventHandler *) : void</text><rect fill="#F24D5C" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="423" y="407.9016"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="195" x="430.2" y="412.2797">addAnts(renderTexture : sf::RenderTexture *) : void</text><rect fill="#F24D5C" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="423" y="419.0742"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="182.4" x="430.2" y="423.4523">addPopup(pTexture : sf::RenderTexture *) : void</text></g><!--MD5=[013d7b6a8b15d42bbad9eb96abe0492d]
class SFMLEventHandler--><g id="elem_SFMLEventHandler"><rect codeLine="306" fill="#F1F1F1" height="162.8719" id="SFMLEventHandler" rx="1.5" ry="1.5" style="stroke:#181818;stroke-width:0.3;" width="417.6" x="771" y="159.0082"/><ellipse cx="940.65" cy="168.6082" fill="#ADD1B2" rx="6.6" ry="6.6" style="stroke:#181818;stroke-width:0.6;"/><path d="M942.3094,166.1332 Q942.4031,166.002 942.5156,165.9363 Q942.6281,165.8707 942.7594,165.8707 Q942.9844,165.8707 943.125,166.0301 Q943.2656,166.1801 943.2656,166.5457 L943.2656,167.4176 Q943.2656,167.7832 943.125,167.9426 Q942.9844,168.102 942.7594,168.102 Q942.5531,168.102 942.4313,167.9801 Q942.3094,167.8676 942.2438,167.5582 Q942.2156,167.3426 942.1031,167.2301 Q941.9063,167.0051 941.5406,166.8738 Q941.175,166.7426 940.8,166.7426 Q940.3406,166.7426 939.9563,166.9395 Q939.5813,167.1363 939.2813,167.5863 Q938.9906,168.0363 938.9906,168.6551 L938.9906,169.3113 Q938.9906,170.052 939.525,170.5488 Q940.0594,171.0363 941.0156,171.0363 Q941.5781,171.0363 941.9719,170.8863 Q942.2063,170.7926 942.4594,170.5301 Q942.6188,170.3707 942.7031,170.3238 Q942.7969,170.277 942.9187,170.277 Q943.1156,170.277 943.2656,170.4363 Q943.425,170.5863 943.425,170.7926 Q943.425,170.9988 943.2188,171.2426 Q942.9187,171.5895 942.4406,171.7863 Q941.7937,172.0582 941.0156,172.0582 Q940.1062,172.0582 939.3844,171.6832 Q938.7937,171.3832 938.3812,170.7457 Q937.9688,170.0988 937.9688,169.3301 L937.9688,168.6363 Q937.9688,167.8395 938.3344,167.1551 Q938.7094,166.4613 939.3656,166.0957 Q940.0219,165.7207 940.7625,165.7207 Q941.2031,165.7207 941.5875,165.8238 Q941.9812,165.9176 942.3094,166.1332 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="73.2" x="952.95" y="172.0863">SFMLEventHandler</text><line style="stroke:#181818;stroke-width:0.3;" x1="771.6" x2="1188" y1="178.2082" y2="178.2082"/><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="775.8" y="185.2945"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="108.6" x="783" y="189.6727">window : sf::RenderWindow *</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="775.8" y="196.4672"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="56.4" x="783" y="200.8453">game : Game *</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="775.8" y="207.6398"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="148.2" x="783" y="212.018">sfmlGameEngine : SFMLGameEngine *</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="775.8" y="218.8125"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="76.2" x="783" y="223.1906">thread : sf::Thread *</text><line style="stroke:#181818;stroke-width:0.3;" x1="771.6" x2="1188" y1="227.6988" y2="227.6988"/><ellipse cx="777.6" cy="236.5852" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="402" x="783" y="239.1633">SFMLEventHandler(window : sf::RenderWindow *, game : Game *, sfmlGameEngine : SFMLGameEngine *)</text><ellipse cx="777.6" cy="247.7578" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="45.6" x="783" y="250.3359">start() : void</text><ellipse cx="777.6" cy="258.9305" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="64.2" x="783" y="261.5086">terminate() : void</text><ellipse cx="777.6" cy="270.1031" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="64.8" x="783" y="272.6813">readInput() : void</text><ellipse cx="777.6" cy="281.2758" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="57.6" x="783" y="283.8539">setView() : void</text><rect fill="#F24D5C" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="775.8" y="290.6484"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="76.2" x="783" y="295.0266">handleEvent() : void</text><rect fill="#F24D5C" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="775.8" y="301.8211"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="128.4" x="783" y="306.1992">buildPopup(int x, int y) : std::string</text><ellipse cx="777.6" cy="314.7938" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="84" x="783" y="317.3719">~SFMLEventHandler()</text></g><!--MD5=[420782f7c2f0c536da4794c8b41bee93]
class GameEngine--><g id="elem_GameEngine"><rect codeLine="4" fill="#F1F1F1" height="95.8359" id="GameEngine" rx="1.5" ry="1.5" style="stroke:#181818;stroke-width:0.3;" width="127.2" x="793.8" y="1087.2082"/><ellipse cx="830.25" cy="1096.8082" fill="#ADD1B2" rx="6.6" ry="6.6" style="stroke:#181818;stroke-width:0.6;"/><path d="M831.9094,1094.3332 Q832.0031,1094.202 832.1156,1094.1363 Q832.2281,1094.0707 832.3594,1094.0707 Q832.5844,1094.0707 832.725,1094.2301 Q832.8656,1094.3801 832.8656,1094.7457 L832.8656,1095.6176 Q832.8656,1095.9832 832.725,1096.1426 Q832.5844,1096.302 832.3594,1096.302 Q832.1531,1096.302 832.0313,1096.1801 Q831.9094,1096.0676 831.8438,1095.7582 Q831.8156,1095.5426 831.7031,1095.4301 Q831.5063,1095.2051 831.1406,1095.0738 Q830.775,1094.9426 830.4,1094.9426 Q829.9406,1094.9426 829.5563,1095.1395 Q829.1813,1095.3363 828.8813,1095.7863 Q828.5906,1096.2363 828.5906,1096.8551 L828.5906,1097.5113 Q828.5906,1098.252 829.125,1098.7488 Q829.6594,1099.2363 830.6156,1099.2363 Q831.1781,1099.2363 831.5719,1099.0863 Q831.8063,1098.9926 832.0594,1098.7301 Q832.2188,1098.5707 832.3031,1098.5238 Q832.3969,1098.477 832.5188,1098.477 Q832.7156,1098.477 832.8656,1098.6363 Q833.025,1098.7863 833.025,1098.9926 Q833.025,1099.1988 832.8188,1099.4426 Q832.5188,1099.7895 832.0406,1099.9863 Q831.3938,1100.2582 830.6156,1100.2582 Q829.7063,1100.2582 828.9844,1099.8832 Q828.3938,1099.5832 827.9812,1098.9457 Q827.5688,1098.2988 827.5688,1097.5301 L827.5688,1096.8363 Q827.5688,1096.0395 827.9344,1095.3551 Q828.3094,1094.6613 828.9656,1094.2957 Q829.6219,1093.9207 830.3625,1093.9207 Q830.8031,1093.9207 831.1875,1094.0238 Q831.5813,1094.1176 831.9094,1094.3332 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="49.2" x="842.55" y="1100.2863">GameEngine</text><line style="stroke:#181818;stroke-width:0.3;" x1="794.4" x2="920.4" y1="1106.4082" y2="1106.4082"/><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="798.6" y="1113.4945"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="63.6" x="805.8" y="1117.8727">colony : Colony *</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="798.6" y="1124.6672"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="56.4" x="805.8" y="1129.0453">game : Game *</text><rect fill="none" height="3.6" style="stroke:#C82930;stroke-width:0.6;" width="3.6" x="798.6" y="1135.8398"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="106.8" x="805.8" y="1140.218">defaultFPS : unsigned const</text><line style="stroke:#181818;stroke-width:0.3;" x1="794.4" x2="920.4" y1="1144.7262" y2="1144.7262"/><ellipse cx="800.4" cy="1153.6125" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="111.6" x="805.8" y="1156.1906">GameEngine(game : Game *)</text><ellipse cx="800.4" cy="1164.7852" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="45.6" x="805.8" y="1167.3633">start() : void</text><ellipse cx="800.4" cy="1175.9578" fill="#84BE84" rx="1.8" ry="1.8" style="stroke:#038048;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="8.4" lengthAdjust="spacing" textLength="52.2" x="805.8" y="1178.5359">pause() : void</text></g><!--MD5=[20b1147c8dc68ac127857b9b87999fa8]
link Ant to Coordinate--><g id="link_Ant_Coordinate"><path codeLine="67" d="M344.736,1510.8802 C346.584,1516.9042 348.294,1522.9042 349.8,1528.8082 C354.726,1548.1222 357.96,1569.9142 360.042,1588.5922 " fill="none" id="Ant-to-Coordinate" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="#181818" points="360.396,1591.8022,362.1956,1586.1736,360.0703,1588.8199,357.424,1586.6946,360.396,1591.8022" style="stroke:#181818;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="7.8" lengthAdjust="spacing" textLength="44.4" x="352.8" y="1537.8252">«coordinate»</text></g><!--MD5=[20b1147c8dc68ac127857b9b87999fa8]
link Ant to Coordinate--><g id="link_Ant_Coordinate"><path codeLine="68" d="M273.288,1510.9282 C273.672,1520.9662 275.4,1530.8782 279,1540.2082 C286.026,1558.4122 298.428,1575.2602 311.61,1589.4862 " fill="none" id="Ant-to-Coordinate-1" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="#181818" points="313.734,1591.7422,311.7807,1586.165,311.6779,1589.5576,308.2854,1589.4548,313.734,1591.7422" style="stroke:#181818;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="7.8" lengthAdjust="spacing" textLength="64.8" x="279.6" y="1537.8252">«homeCoordinate»</text></g><!--MD5=[b54ee90ac364f529b3ee9f576f1dd079]
reverse link Direction to Ant--><g id="link_Direction_Ant"><path codeLine="69" d="M150.912,1407.0082 C165.276,1407.0082 181.758,1407.0082 198.444,1407.0082 " fill="none" id="Direction-backto-Ant" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="#181818" points="142.944,1407.0082,146.544,1409.4082,150.144,1407.0082,146.544,1404.6082,142.944,1407.0082" style="stroke:#181818;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="7.8" lengthAdjust="spacing" textLength="33.6" x="153.9" y="1402.8252">«pathing»</text></g><!--MD5=[c6186fefc20b543627ed0087a3400e5d]
link Ant to Action--><g id="link_Ant_Action"><path codeLine="70" d="M240.408,1510.9702 C230.802,1526.8282 221.046,1542.9442 211.896,1558.0462 " fill="none" id="Ant-Action" style="stroke:#181818;stroke-width:0.6;"/></g><!--MD5=[8b224729526d4405432805feadeba0ef]
reverse link Ant to ColonyAnt--><g id="link_Ant_ColonyAnt"><path d="M416.556,1508.2102 C434.562,1524.7102 452.832,1541.7862 469.8,1558.2082 C484.608,1572.5422 500.562,1588.9642 513.726,1602.8122 " fill="none" id="Ant-backto-ColonyAnt" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="none" points="413.49,1511.0962,407.46,1499.9002,419.154,1504.8922,413.49,1511.0962" style="stroke:#181818;stroke-width:0.6;"/></g><!--MD5=[b84a68f99395857d3d5b36ff4f386908]
link Queen to ColonyAnt--><g id="link_Queen_ColonyAnt"><path codeLine="90" d="M547.068,1477.2502 C545.682,1494.1102 544.398,1512.0922 543.6,1528.8082 C542.628,1549.1182 542.28,1571.6662 542.19,1590.6202 " fill="none" id="Queen-to-ColonyAnt" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="none" points="546.39,1590.8062,542.166,1602.7942,537.99,1590.7882,546.39,1590.8062" style="stroke:#181818;stroke-width:0.6;"/></g><!--MD5=[b84a68f99395857d3d5b36ff4f386908]
link Queen to ColonyAnt--><g id="link_Queen_ColonyAnt"><path codeLine="92" d="M550.284,1477.2262 C548.334,1515.9502 545.976,1562.6782 544.35,1594.8982 " fill="none" id="Queen-to-ColonyAnt-1" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="none" points="543.954,1602.7582,546.5329,1599.2841,544.3179,1595.5674,541.739,1599.0415,543.954,1602.7582" style="stroke:#181818;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="7.8" lengthAdjust="spacing" textLength="49.8" x="547.8" y="1537.8252">«currentChild»</text></g><!--MD5=[bf34a42e886113cfa754b1a71ed5731f]
reverse link ColonyAnt to Worker--><g id="link_ColonyAnt_Worker"><path codeLine="104" d="M506.106,1674.5062 C486.546,1695.9562 462.042,1722.8242 440.352,1746.6082 " fill="none" id="ColonyAnt-backto-Worker" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="none" points="503.25,1671.4042,514.44,1665.3682,509.454,1677.0682,503.25,1671.4042" style="stroke:#181818;stroke-width:0.6;"/></g><!--MD5=[7d771143bc9c8bc24b30a596979d10ef]
reverse link ColonyAnt to Soldier--><g id="link_ColonyAnt_Soldier"><path codeLine="114" d="M616.302,1634.1082 C619.236,1634.1082 622.176,1634.1082 625.11,1634.1082 " fill="none" id="ColonyAnt-backto-Soldier" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="none" points="616.23,1638.3082,604.23,1634.1082,616.23,1629.9082,616.23,1638.3082" style="stroke:#181818;stroke-width:0.6;"/></g><!--MD5=[26ad8202eb97f57abf7dafbbd2510cb4]
reverse link ColonyAnt to Slaver--><g id="link_ColonyAnt_Slaver"><path codeLine="123" d="M542.4,1677.4342 C542.4,1703.7082 542.4,1737.2242 542.4,1763.3242 " fill="none" id="ColonyAnt-backto-Slaver" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="none" points="538.2,1677.3682,542.4,1665.3682,546.6,1677.3682,538.2,1677.3682" style="stroke:#181818;stroke-width:0.6;"/></g><!--MD5=[9ce6cdc06162e0c77138725200e831d5]
reverse link ColonyAnt to Scout--><g id="link_ColonyAnt_Scout"><path codeLine="132" d="M573.438,1674.9562 C593.964,1701.5722 620.814,1736.3962 641.58,1763.3242 " fill="none" id="ColonyAnt-backto-Scout" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="none" points="570.048,1677.4342,566.046,1665.3682,576.696,1672.3042,570.048,1677.4342" style="stroke:#181818;stroke-width:0.6;"/></g><!--MD5=[0dc0e9fef7777f0d6f6ebedf5bea88bd]
link Colony to Ant--><g id="link_Colony_Ant"><path codeLine="149" d="M499.65,1216.5322 C489.6,1230.0262 478.836,1243.5982 468,1255.8082 C451.2,1274.7382 432.246,1293.8002 413.328,1311.6982 " fill="none" id="Colony-to-Ant" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="#181818" points="407.46,1317.2122,411.727,1316.496,412.707,1312.2818,408.44,1312.998,407.46,1317.2122" style="stroke:#181818;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="7.8" lengthAdjust="spacing" textLength="34.8" x="447.6" y="1282.8252">«listAnts»</text></g><!--MD5=[ed80148b238f5894f1e2ea83401de343]
link Colony to Queen--><g id="link_Colony_Queen"><path codeLine="150" d="M553.8,1216.6282 C553.8,1253.8162 553.8,1297.5982 553.8,1333.7302 " fill="none" id="Colony-to-Queen" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="#181818" points="553.8,1336.7602,556.2,1331.3602,553.8,1333.7602,551.4,1331.3602,553.8,1336.7602" style="stroke:#181818;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="7.8" lengthAdjust="spacing" textLength="29.4" x="554.4" y="1282.8252">«queen»</text></g><!--MD5=[6aff5f7b71d49368e6589cb28a463732]
reverse link Colony to GameEngine--><g id="link_Colony_GameEngine"><path codeLine="151" d="M632.52,1135.2082 C682.638,1135.2082 746.712,1135.2082 793.638,1135.2082 " fill="none" id="Colony-backto-GameEngine" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="#181818" points="629.238,1135.2082,634.638,1137.6082,632.238,1135.2082,634.638,1132.8082,629.238,1135.2082" style="stroke:#181818;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="7.8" lengthAdjust="spacing" textLength="31.2" x="695.85" y="1131.0252">«colony»</text></g><!--MD5=[007b46a9e3e77ca6466d505e42494c62]
link Chunk to Ant--><g id="link_Chunk_Ant"><path codeLine="181" d="M248.7991,1262.6109 C248.7991,1262.6109 261.5215,1296.3565 261.5215,1296.3565 " fill="none" id="Chunk-Ant" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="none" points="246.258,1255.8742,245.283,1260.0896,248.7991,1262.6109,249.7741,1258.3955,246.258,1255.8742" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="#181818" points="264.06,1303.0942,265.0366,1298.8792,261.5215,1296.3565,260.5449,1300.5715,264.06,1303.0942" style="stroke:#181818;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="7.8" lengthAdjust="spacing" textLength="30.6" x="256.2" y="1282.8252">«listAnt»</text></g><!--MD5=[efa32d258b96e716d80a530ef9dcba88]
reverse link TypeOfChunk to Chunk--><g id="link_TypeOfChunk_Chunk"><path codeLine="182" d="M381.93,1135.2082 C361.638,1135.2082 335.76,1135.2082 309.972,1135.2082 " fill="none" id="TypeOfChunk-backto-Chunk" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="#181818" points="385.14,1135.2082,379.74,1132.8082,382.14,1135.2082,379.74,1137.6082,385.14,1135.2082" style="stroke:#181818;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="7.8" lengthAdjust="spacing" textLength="53.4" x="320.85" y="1131.0252">«typeOfChunk»</text></g><!--MD5=[b5a6c68a441b452411c71f56f773704b]
link Map to Chunk--><g id="link_Map_Chunk"><path codeLine="205" d="M201,967.2862 C201,980.2162 201,993.4642 201,1006.5562 " fill="none" id="Map-to-Chunk" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="#181818" points="201,1014.4702,203.4,1010.8702,201,1007.2702,198.6,1010.8702,201,1014.4702" style="stroke:#181818;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="7.8" lengthAdjust="spacing" textLength="33.6" x="201.6" y="994.2252">«chunks»</text></g><!--MD5=[079a7c48f84647fc7b509c420173c184]
link MapBuilder to Map--><g id="link_MapBuilder_Map"><path codeLine="224" d="M173.868,690.0742 C176.28,704.4322 178.8,719.4322 181.284,734.2582 " fill="none" id="MapBuilder-to-Map" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="#181818" points="181.782,737.2222,183.2535,731.499,181.2846,734.2637,178.52,732.2948,181.782,737.2222" style="stroke:#181818;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="7.8" lengthAdjust="spacing" textLength="23.4" x="179.4" y="717.0252">«map»</text></g><!--MD5=[d2bcaf4b26145a3f99c777208a8a8c40]
link Game to Map--><g id="link_Game_Map"><path codeLine="241" d="M438.582,678.7342 C408.426,700.6942 375.342,724.7782 343.698,747.8182 " fill="none" id="Game-to-Map" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="#181818" points="341.226,749.6122,347.0043,748.3746,343.6515,747.8467,344.1794,744.4939,341.226,749.6122" style="stroke:#181818;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="7.8" lengthAdjust="spacing" textLength="23.4" x="396.6" y="717.0252">«map»</text></g><!--MD5=[13ad4486f3b374917f873765a72e4428]
link Game to Colony--><g id="link_Game_Colony"><path codeLine="242" d="M550.236,678.8362 C551.016,779.1202 552.348,949.1482 553.146,1050.7642 " fill="none" id="Game-to-Colony" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="#181818" points="553.17,1053.8962,555.5236,1048.4758,553.1443,1050.8963,550.7238,1048.517,553.17,1053.8962" style="stroke:#181818;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="7.8" lengthAdjust="spacing" textLength="31.2" x="552.6" y="855.6252">«colony»</text></g><!--MD5=[d9ce759af78afb44d39866196cb71462]
link GameEngine to Game--><g id="link_GameEngine_Game"><path codeLine="243" d="M830.196,1087.1722 C777.948,996.0682 662.946,795.5482 597.552,681.5182 " fill="none" id="GameEngine-to-Game" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="#181818" points="596.016,678.8362,596.6239,684.7142,597.51,681.4378,600.7864,682.3238,596.016,678.8362" style="stroke:#181818;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="7.8" lengthAdjust="spacing" textLength="27.6" x="759" y="855.6252">«game»</text></g><!--MD5=[7abf1b8237cbf535c676522d076ebaad]
reverse link ColonyEvolutionExporter to Game--><g id="link_ColonyEvolutionExporter_Game"><path codeLine="263" d="M885.09,597.3082 C851.946,597.3082 813.522,597.3082 774.75,597.3082 " fill="none" id="ColonyEvolutionExporter-backto-Game" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="#181818" points="888.282,597.3082,882.882,594.9082,885.282,597.3082,882.882,599.7082,888.282,597.3082" style="stroke:#181818;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="7.8" lengthAdjust="spacing" textLength="91.8" x="785.55" y="593.1252">«colonyEvolutionExporter»</text></g><!--MD5=[5eeb126e52a3fef1be6a5bedb4e4f249]
link SFMLGameEngine to Game--><g id="link_SFMLGameEngine_Game"><path codeLine="304" d="M549.6,427.9282 C549.6,457.6402 549.6,487.0102 549.6,512.7202 " fill="none" id="SFMLGameEngine-to-Game" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="#181818" points="549.6,515.8342,552,510.4342,549.6,512.8342,547.2,510.4342,549.6,515.8342" style="stroke:#181818;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="7.8" lengthAdjust="spacing" textLength="27.6" x="550.2" y="470.4252">«game»</text></g><!--MD5=[912cddb0c41e970252d7970a01fc1c32]
reverse link SFMLEventHandler to SFMLGameEngine--><g id="link_SFMLEventHandler_SFMLGameEngine"><path codeLine="321" d="M767.664,254.2942 C748.002,254.4922 728.382,254.2882 709.5,253.5082 C700.248,253.1242 690.696,252.6202 681.09,252.0322 " fill="none" id="SFMLEventHandler-backto-SFMLGameEngine" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="#181818" points="770.82,254.2582,765.3929,251.9201,767.8202,254.2925,765.4478,256.7198,770.82,254.2582" style="stroke:#181818;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="7.8" lengthAdjust="spacing" textLength="31.8" x="710.1" y="251.1252">«control»</text></g><!--MD5=[f24d39d57e37b02790a137fab17f97e5]
reverse link SFMLGameEngine to SFMLEventHandler--><g id="link_SFMLGameEngine_SFMLEventHandler"><path codeLine="322" d="M684.024,240.3082 C711.654,240.3082 741.366,240.3082 770.916,240.3082 " fill="none" id="SFMLGameEngine-backto-SFMLEventHandler" style="stroke:#181818;stroke-width:0.6;"/><polygon fill="#181818" points="681.012,240.3082,686.412,242.7082,684.012,240.3082,686.412,237.9082,681.012,240.3082" style="stroke:#181818;stroke-width:0.6;"/><text fill="#000000" font-family="sans-serif" font-size="7.8" lengthAdjust="spacing" textLength="67.8" x="692.1" y="236.1252">«sfmlGameEngine»</text></g><!--MD5=[241e03458f85d6dd2cf93b0a12fadfb4]
@startuml
'https://plantuml.com/class-diagram


class GameEngine {
    -colony : Colony *
    -game : Game *
    -defaultFPS : unsigned const
    +GameEngine(game : Game *)
    +start() : void
    +pause() : void
}

package model {
    class Coordinate {
        +x: unsigned
        +y: unsigned
        +Coordinate(x: unsigned, y: unsigned)
        +Coordinate()
        +operator == (const Coordinate& c) const : bool
    }

    enum Action {
        NOTHING,
        GO_BACK_TO_COLONY_WITH_FOOD,
        COMING_HOME,
        SEARCH_FOR_FOOD,
        SEARCH_COLONY,
        EXPLORE,
        PATROLLING,
        BORN,
        CARRING_LARVA,
        ATTACK,
        DIE
    }

    enum Direction {
        NONE,
        TOP_RIGHT,
        TOP,
        TOP_LEFT,
        LEFT,
        BOTTOM_LEFT,
        BOTTOM,
        BOTTOM_RIGHT,
        RIGHT
    }

    abstract class Ant {
        #pathing : std::vector<Direction>
        #countChunks : int
        #coordinate : Coordinate
        #homeCoordinate : Coordinate
        #{static} idCount : unsigned long
        #id : unsigned long
        +Ant()
        +{abstract} virtual update(map : Map) : Action
        +getCoordinate() : Coordinate
        +setCoordinate(coordinate : Coordinate) : void
        +moveBackward(map : Map *) : void
        +moveTo(map : Map *, direction : Direction) : void
        +setHomeCoordinate(coordinate : Coordinate) : void
        +operator==(other : const Ant&) const : bool
        +isAtHome() : bool
        +~Ant();
    }

    Ant - -> Coordinate : <<coordinate>>
    Ant - -> Coordinate : <<homeCoordinate>>
    Ant -left-* Direction : <<pathing>>
    Ant - - Action

    abstract class ColonyAnt extends Ant {
        +ColonyAnt();
        +{abstract} update(map : Map) :  Action;
        +~ColonyAnt();
    }

    class Queen {
        -currentAge : unsigned
        -isAgressed : bool
        -currentChild : ColonyAnt **
        +Queen()
        +canLayEggs() : bool
        +agressed() : void
        +update(map : Map) : Action
        +born() : void
        +{static} createLarva(coordinate : Coordinate) : ColonyAnt **
        +~Queen()
    }
    Queen - -|> ColonyAnt

    Queen - -o ColonyAnt : <<currentChild>>

    class Worker {
        -carringFood : bool
        -dayBeforeMajority : unsigned
        +Worker()
        +setCarringFood(carringFood : bool) : void
        +isCarringFood() : bool
        +isMinor() : bool
        +update(Map map) : Action
        +~Worker()
    }
    Worker -up-|> ColonyAnt

    class Soldier {
        +dayBeforeComingBack : unsigned
        +comingHome : bool
        +Soldier()
        +isComingHome() : bool
        +update(map : Map) : Action
        +~Soldier()
    }
    Soldier -left-|> ColonyAnt

    class Slaver {
        -isCarringLarva : bool
        +Slaver()
        +carringLarva() : bool
        +update():Action
        +~Slaver()
    }
    Slaver -up-|> ColonyAnt

    class Scout {
        -dayBeforeMajority : unsigned
        +Scout()
        +isMinor() : bool
        +update(map : Map) : Action
        +~Scout()
    }
    Scout -up-|> ColonyAnt

    class Colony {
        -listAnts : std::vector<Ant*>
        -queen : Queen *
        -foodStock : unsigned long
        -days : unsigned
        +Colony()
        +update() : void
        +addLarva(ColonyAnt ** larva) : void
        +getAnts() : std::vector<Ant*>
        +getDay() : unsigned
        +getFoodQuantity() : unsigned long
        +addFood(quantity : unsigned) : void
        +~Colony()
    }

    Colony - -* Ant : <<listAnts>>
    Colony - -> Queen : <<queen>>
    GameEngine -left-> Colony : <<colony>>

    enum TypeOfChunk {
        EMPTY,
        COLONY,
        OBSTACLE
    }

    class Chunk {
        -typeOfChunk : TypeOfChunk
        -foodQuantity : unsigned
        -explored : bool
        -pheromoneQuantity : unsigned
        -listAnt : std::vector<Ant*>
        +Chunk(type : TypeOfChunk, foodQuantity : unsigned)
        +setTypeOfChunk(type : TypeOfChunk)
        +setFoodQuantity(quantity : unsigned)
        +getTypeOfChunk() : TypeOfChunk
        +getFoodQuantity() : unsigned
        +getPheromone() : unsigned
        +setPheromone(quantity : unsigned)
        +isExplored() : bool
        +setExplored(explored : bool)
        +addAnt(ant : Ant*)
        +removeAnt(ant : Ant*)
        +getAnts() : std::vector<Ant*>
        +setAnts(ants : std::vector<Ant*>)
        +~Chuck()
    }

    Chunk o- -* Ant : <<listAnt>>
    Chunk -left-> TypeOfChunk : <<typeOfChunk>>

    class Map {
        -chunks : Chunk[][]
        -width : unsigned
        -height : unsigned
        +Map(width:unsigned, height:unsigned)
        +printMap() : void
        +getChunk(x : unsigned, y : unsigned)
        +getChunks() : Chunk[][]
        +changeTypeOfChunk(x : unsigned, y : unsigned, type : TypeOfChunk)
        +getHeigth() : unsigned
        +getWidth() : unsigned
        +operator[](x : unsigned) : Chunk *
        +operator[](coordinate : Coordinate) : Chunk
        +addAnt(x : unsigned, y : unsigned, ant : Ant *)
        +removeAnt(x : unsigned, y : unsigned, ant : Ant *)
        +setExplored(x : unsigned, y : unsigned, explored : bool)
        +getFoodQuantity(x : unsigned, y : unsigned) :unsigned
        +changeFoodQuantity (x : unsigned,y : unsigned, quantity : unsigned)
        +~Map()
    }

    Map - -* Chunk : <<chunks>>

    class MapBuilder {
        -width : unsigned
        -height : unsigned
        -std::list<Coordinate> freeChunks
        -map : Map *
        -obstacleCanCollide : bool
        -mt : std::mt19937
        -dist : std::uniform_int_distribution<unsigned>
        -dist_x : std::uniform_int_distribution<unsigned>
        -dist_y : std::uniform_int_distribution<unsigned>
        +MapBuilder(width : unsigned, height : unsigned, borderCanCollide : bool)
        +addObstacles(number : unsigned, size : unsigned)
        +addFood(number : unsigned, quantity : unsigned)
        +getMap() : Map *
        +~MapBuilder()
    }

    MapBuilder - -> Map : <<map>>

    class Game {
        -map : Map *
        -colony : Colony *
        -colonyEvolutionExporter : ColonyEvolutionExporter *
        -isRunning : bool
        +Game(map : Map *, colony : Colony *)
        +getMap() : Map *
        +updateAllAnts() : void
        +getColony() : Colony *
        +stopGame() : void
        +start() : void
        +updateAnt(map : Map *, ant : Ant *, action : Action, coordinate : Coordinate) : bool
        + {static} getRandomDirection(map : Map, coordinate : Coordinate, needToBeExplored : bool, containFood : bool) : Direction
    }

    Game - -> Map : <<map>>
    Game - -> Colony : <<colony>>
    GameEngine - -> Game : <<game>>
}

package export {

    class ColonyEvolutionExporter {
        -fileIn : ofstream
        +ColonyEvolutionExporter(fileName : std::string)
        +update(colony : Colony) : void
        #ColonyEvolutionExporter()
        -next() : void
        -nextLine() : void
        -append(string : std::string) : void
        -append(integer : int) : void
        -append(integer : unsigned) : void
        -append(integer : unsigned long) : void
        -append(integer : long) : void
        -append(floatValue : float) : void
        -append(doubleValue : double) : void
    }
    Game -left-> ColonyEvolutionExporter : <<colonyEvolutionExporter>>
}


package view {
    package sfml {

        class SFMLGameEngine {
            -colonyTexture : sf::Texture
            -foodTexture : sf::Texture
            -antTexture : sf::Texture
            -grassTexture : sf::Texture
            -grassTextureNotVisited : sf::Texture
            -rockTexture : sf::Texture
            -workerTexture : sf::Texture
            -slaveTexture : sf::Texture
            -soldierTexture : sf::Texture
            -scoutTexture : sf::Texture
            -font : sf::Font
            -popup : sf::Text
            -thread : sf::Thread
            -window : sf::RenderWindow *
            -view : sf::View *
            -control : SFMLEventHandler *
            -game : Game *
            -height : unsigned
            -width : unsigned
            +SFMLGameEngine(window : sf::RenderWindow *, game : Game *)
            +createTexture() : void
            +renderingFunction() : void
            +start() : void
            +stop() : void
            +terminate() : void
            +getWindow() : sf::RenderWindow *
            +getView() : sf::View *
            +setPopup(string : std::string, int x, int y) : void
            +setSFMLEventHandler(control : SFMLEventHandler *) : void
            -addAnts(renderTexture : sf::RenderTexture *) : void
            -addPopup(pTexture : sf::RenderTexture *) : void
        }

        Game <-up- SFMLGameEngine : <<game>>

        class SFMLEventHandler {
            -window : sf::RenderWindow *
            -game : Game *
            -sfmlGameEngine : SFMLGameEngine *
            -thread : sf::Thread *
            +SFMLEventHandler(window : sf::RenderWindow *, game : Game *, sfmlGameEngine : SFMLGameEngine *)
            +start() : void
            +terminate() : void
            +readInput() : void
            +setView() : void
            -handleEvent() : void
            -buildPopup(int x, int y) : std::string
            +~SFMLEventHandler()
        }

        SFMLGameEngine -left-> SFMLEventHandler : <<control>>
        SFMLGameEngine <- - SFMLEventHandler : <<sfmlGameEngine>>
    }
}
@enduml

@startuml


class GameEngine {
    -colony : Colony *
    -game : Game *
    -defaultFPS : unsigned const
    +GameEngine(game : Game *)
    +start() : void
    +pause() : void
}

package model {
    class Coordinate {
        +x: unsigned
        +y: unsigned
        +Coordinate(x: unsigned, y: unsigned)
        +Coordinate()
        +operator == (const Coordinate& c) const : bool
    }

    enum Action {
        NOTHING,
        GO_BACK_TO_COLONY_WITH_FOOD,
        COMING_HOME,
        SEARCH_FOR_FOOD,
        SEARCH_COLONY,
        EXPLORE,
        PATROLLING,
        BORN,
        CARRING_LARVA,
        ATTACK,
        DIE
    }

    enum Direction {
        NONE,
        TOP_RIGHT,
        TOP,
        TOP_LEFT,
        LEFT,
        BOTTOM_LEFT,
        BOTTOM,
        BOTTOM_RIGHT,
        RIGHT
    }

    abstract class Ant {
        #pathing : std::vector<Direction>
        #countChunks : int
        #coordinate : Coordinate
        #homeCoordinate : Coordinate
        #{static} idCount : unsigned long
        #id : unsigned long
        +Ant()
        +{abstract} virtual update(map : Map) : Action
        +getCoordinate() : Coordinate
        +setCoordinate(coordinate : Coordinate) : void
        +moveBackward(map : Map *) : void
        +moveTo(map : Map *, direction : Direction) : void
        +setHomeCoordinate(coordinate : Coordinate) : void
        +operator==(other : const Ant&) const : bool
        +isAtHome() : bool
        +~Ant();
    }

    Ant - -> Coordinate : <<coordinate>>
    Ant - -> Coordinate : <<homeCoordinate>>
    Ant -left-* Direction : <<pathing>>
    Ant - - Action

    abstract class ColonyAnt extends Ant {
        +ColonyAnt();
        +{abstract} update(map : Map) :  Action;
        +~ColonyAnt();
    }

    class Queen {
        -currentAge : unsigned
        -isAgressed : bool
        -currentChild : ColonyAnt **
        +Queen()
        +canLayEggs() : bool
        +agressed() : void
        +update(map : Map) : Action
        +born() : void
        +{static} createLarva(coordinate : Coordinate) : ColonyAnt **
        +~Queen()
    }
    Queen - -|> ColonyAnt

    Queen - -o ColonyAnt : <<currentChild>>

    class Worker {
        -carringFood : bool
        -dayBeforeMajority : unsigned
        +Worker()
        +setCarringFood(carringFood : bool) : void
        +isCarringFood() : bool
        +isMinor() : bool
        +update(Map map) : Action
        +~Worker()
    }
    Worker -up-|> ColonyAnt

    class Soldier {
        +dayBeforeComingBack : unsigned
        +comingHome : bool
        +Soldier()
        +isComingHome() : bool
        +update(map : Map) : Action
        +~Soldier()
    }
    Soldier -left-|> ColonyAnt

    class Slaver {
        -isCarringLarva : bool
        +Slaver()
        +carringLarva() : bool
        +update():Action
        +~Slaver()
    }
    Slaver -up-|> ColonyAnt

    class Scout {
        -dayBeforeMajority : unsigned
        +Scout()
        +isMinor() : bool
        +update(map : Map) : Action
        +~Scout()
    }
    Scout -up-|> ColonyAnt

    class Colony {
        -listAnts : std::vector<Ant*>
        -queen : Queen *
        -foodStock : unsigned long
        -days : unsigned
        +Colony()
        +update() : void
        +addLarva(ColonyAnt ** larva) : void
        +getAnts() : std::vector<Ant*>
        +getDay() : unsigned
        +getFoodQuantity() : unsigned long
        +addFood(quantity : unsigned) : void
        +~Colony()
    }

    Colony - -* Ant : <<listAnts>>
    Colony - -> Queen : <<queen>>
    GameEngine -left-> Colony : <<colony>>

    enum TypeOfChunk {
        EMPTY,
        COLONY,
        OBSTACLE
    }

    class Chunk {
        -typeOfChunk : TypeOfChunk
        -foodQuantity : unsigned
        -explored : bool
        -pheromoneQuantity : unsigned
        -listAnt : std::vector<Ant*>
        +Chunk(type : TypeOfChunk, foodQuantity : unsigned)
        +setTypeOfChunk(type : TypeOfChunk)
        +setFoodQuantity(quantity : unsigned)
        +getTypeOfChunk() : TypeOfChunk
        +getFoodQuantity() : unsigned
        +getPheromone() : unsigned
        +setPheromone(quantity : unsigned)
        +isExplored() : bool
        +setExplored(explored : bool)
        +addAnt(ant : Ant*)
        +removeAnt(ant : Ant*)
        +getAnts() : std::vector<Ant*>
        +setAnts(ants : std::vector<Ant*>)
        +~Chuck()
    }

    Chunk o- -* Ant : <<listAnt>>
    Chunk -left-> TypeOfChunk : <<typeOfChunk>>

    class Map {
        -chunks : Chunk[][]
        -width : unsigned
        -height : unsigned
        +Map(width:unsigned, height:unsigned)
        +printMap() : void
        +getChunk(x : unsigned, y : unsigned)
        +getChunks() : Chunk[][]
        +changeTypeOfChunk(x : unsigned, y : unsigned, type : TypeOfChunk)
        +getHeigth() : unsigned
        +getWidth() : unsigned
        +operator[](x : unsigned) : Chunk *
        +operator[](coordinate : Coordinate) : Chunk
        +addAnt(x : unsigned, y : unsigned, ant : Ant *)
        +removeAnt(x : unsigned, y : unsigned, ant : Ant *)
        +setExplored(x : unsigned, y : unsigned, explored : bool)
        +getFoodQuantity(x : unsigned, y : unsigned) :unsigned
        +changeFoodQuantity (x : unsigned,y : unsigned, quantity : unsigned)
        +~Map()
    }

    Map - -* Chunk : <<chunks>>

    class MapBuilder {
        -width : unsigned
        -height : unsigned
        -std::list<Coordinate> freeChunks
        -map : Map *
        -obstacleCanCollide : bool
        -mt : std::mt19937
        -dist : std::uniform_int_distribution<unsigned>
        -dist_x : std::uniform_int_distribution<unsigned>
        -dist_y : std::uniform_int_distribution<unsigned>
        +MapBuilder(width : unsigned, height : unsigned, borderCanCollide : bool)
        +addObstacles(number : unsigned, size : unsigned)
        +addFood(number : unsigned, quantity : unsigned)
        +getMap() : Map *
        +~MapBuilder()
    }

    MapBuilder - -> Map : <<map>>

    class Game {
        -map : Map *
        -colony : Colony *
        -colonyEvolutionExporter : ColonyEvolutionExporter *
        -isRunning : bool
        +Game(map : Map *, colony : Colony *)
        +getMap() : Map *
        +updateAllAnts() : void
        +getColony() : Colony *
        +stopGame() : void
        +start() : void
        +updateAnt(map : Map *, ant : Ant *, action : Action, coordinate : Coordinate) : bool
        + {static} getRandomDirection(map : Map, coordinate : Coordinate, needToBeExplored : bool, containFood : bool) : Direction
    }

    Game - -> Map : <<map>>
    Game - -> Colony : <<colony>>
    GameEngine - -> Game : <<game>>
}

package export {

    class ColonyEvolutionExporter {
        -fileIn : ofstream
        +ColonyEvolutionExporter(fileName : std::string)
        +update(colony : Colony) : void
        #ColonyEvolutionExporter()
        -next() : void
        -nextLine() : void
        -append(string : std::string) : void
        -append(integer : int) : void
        -append(integer : unsigned) : void
        -append(integer : unsigned long) : void
        -append(integer : long) : void
        -append(floatValue : float) : void
        -append(doubleValue : double) : void
    }
    Game -left-> ColonyEvolutionExporter : <<colonyEvolutionExporter>>
}


package view {
    package sfml {

        class SFMLGameEngine {
            -colonyTexture : sf::Texture
            -foodTexture : sf::Texture
            -antTexture : sf::Texture
            -grassTexture : sf::Texture
            -grassTextureNotVisited : sf::Texture
            -rockTexture : sf::Texture
            -workerTexture : sf::Texture
            -slaveTexture : sf::Texture
            -soldierTexture : sf::Texture
            -scoutTexture : sf::Texture
            -font : sf::Font
            -popup : sf::Text
            -thread : sf::Thread
            -window : sf::RenderWindow *
            -view : sf::View *
            -control : SFMLEventHandler *
            -game : Game *
            -height : unsigned
            -width : unsigned
            +SFMLGameEngine(window : sf::RenderWindow *, game : Game *)
            +createTexture() : void
            +renderingFunction() : void
            +start() : void
            +stop() : void
            +terminate() : void
            +getWindow() : sf::RenderWindow *
            +getView() : sf::View *
            +setPopup(string : std::string, int x, int y) : void
            +setSFMLEventHandler(control : SFMLEventHandler *) : void
            -addAnts(renderTexture : sf::RenderTexture *) : void
            -addPopup(pTexture : sf::RenderTexture *) : void
        }

        Game <-up- SFMLGameEngine : <<game>>

        class SFMLEventHandler {
            -window : sf::RenderWindow *
            -game : Game *
            -sfmlGameEngine : SFMLGameEngine *
            -thread : sf::Thread *
            +SFMLEventHandler(window : sf::RenderWindow *, game : Game *, sfmlGameEngine : SFMLGameEngine *)
            +start() : void
            +terminate() : void
            +readInput() : void
            +setView() : void
            -handleEvent() : void
            -buildPopup(int x, int y) : std::string
            +~SFMLEventHandler()
        }

        SFMLGameEngine -left-> SFMLEventHandler : <<control>>
        SFMLGameEngine <- - SFMLEventHandler : <<sfmlGameEngine>>
    }
}
@enduml

PlantUML version 1.2022.13(Sat Nov 19 14:22:17 CET 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: fr
Country: FR
--></g></svg>